<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SchedulingCriticalPath" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Authorization" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
          </elementProp>
          <elementProp name="Client-Context" elementType="Header">
            <stringProp name="Header.name">Client-Context</stringProp>
            <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en&quot;,&quot;culture&quot;:&quot;en-gb&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">qa6-live.mtwo.international</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">admin12</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">Winjit@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">40</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1_LoginPage" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/client/#/loginPage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2_LegalInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="portal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">portal</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/systemoption/legalinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.3_Getlogincss" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="isPortal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPortal</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/desktop/usersettings/getlogincss</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.4_IdpInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/identityservercore/core/idpinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="errorDialog" elementType="Header">
                  <stringProp name="Header.name">errorDialog</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1_ConnectToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">default offline_access</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">{fec4c1a6-8182-4136-a1d4-81ad1af5db4a}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">iTWO.Cloud</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/identityservercore/core/connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="errorDialog" elementType="Header">
                  <stringProp name="Header.name">errorDialog</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AccessToken" enabled="true">
              <stringProp name="TestPlan.comments">eyJhbGciOiJSUzI1NiIsImtpZCI6IjA5QjU4MTg0RTRCQjQwN0YzQURDQURFOUQ2RkU2QTc4RTU1OTVCNERSUzI1NiIsInR5cCI6IkpXVCIsIng1dCI6IkNiV0JoT1M3UUg4NjNLM3AxdjVxZU9WWlcwMCJ9.eyJuYmYiOjE2NTU5ODE1MzQsImV4cCI6MTY1NTk4MzMzNCwiaXNzIjoiaHR0cHM6Ly9xYS1saXZlLm10d28uaW50ZXJuYXRpb25hbC9pdHdvNDAvaWRlbnRpdHlzZXJ2ZXJjb3JlL2NvcmUiLCJhdWQiOiJodHRwczovL3FhLWxpdmUubXR3by5pbnRlcm5hdGlvbmFsL2l0d280MC9pZGVudGl0eXNlcnZlcmNvcmUvY29yZS9yZXNvdXJjZXMiLCJjbGllbnRfaWQiOiJpVFdPLkNsb3VkIiwic3ViIjoiYWRtaW4xNyIsImF1dGhfdGltZSI6MTY1NTk4MTUzNCwiaWRwIjoibG9jYWwiLCJ1c2VyX2lkIjoiMjA4IiwibmFtZSI6ImFkbWluMTciLCJlbWFpbCI6IiIsImJ1c2luZXNzcGFydG5lcl9pZCI6IiIsImNvbnRhY3RfaWQiOiIiLCJwb3J0YWx0b2tlbiI6IkZhbHNlIiwianRpIjoiRDEzNDEzRkUxQjRDRDAyQTZDNzREM0RENzQ0MEQ3M0QiLCJpYXQiOjE2NTU5ODE1MzQsInNjb3BlIjpbImRlZmF1bHQiLCJvZmZsaW5lX2FjY2VzcyJdLCJhbXIiOlsiY3VzdG9tIl19.UFZWT7kLFTzuwZWPVT4kh0TFzSFqox6VLLhkcLJL1QxS9tBs93PdBiWZS_sMWeG7R1FcVIlRA9oIuZjs6ARkRnpIDzx97kq9bcprU_CoKVoKRZWaGDTH3SnwJSqdiW_40jfpeoacgNyLUJDsFhxswvSfBv9E6tDtFhmTn4KPFVUFRmlC6iyrLN-ZI1HLHdDfwG3GWUpIqmxTqQ3lqe3wvyBcDYrWxLjuFgKgMRAye_BnI7Q1ke1DXnHSFjjswaskq5gv2OT4svDSKL7RrzjW1gc_zkPA-9UJeNwgDWf70KjpqkxoJKx5-r9WCMSSUdYKKUiGuQ4_3Lt8dpo2nTXlyw</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AccessToken</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2046268157">{&quot;access_token&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2_GetUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/services/platform/getuserinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; + vars.get(&quot;AccessToken&quot;)));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3_GetUIDataLanguages01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/getuidatalanguages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4_CustomLogon" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/customlogon</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.5_GetUIDataLanguages02" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/getuidatalanguages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.6_GetUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/services/platform/getuserinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.7_GetAssignedCompaniesWithRole" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/company/getassignedcompanieswithroles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:0,&quot;clientId&quot;:0,&quot;permissionClientId&quot;:0,&quot;permissionRoleId&quot;:0,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SelectCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1_RequestedCompanyId01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="requestedCompanyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requestedCompanyId</stringProp>
                  <stringProp name="Argument.value">1000005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="requestedPermissionClientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requestedPermissionClientId</stringProp>
                  <stringProp name="Argument.value">1000005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="requestedRoleId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requestedRoleId</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="requestedSignedInCompanyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">requestedSignedInCompanyId</stringProp>
                  <stringProp name="Argument.value">1000005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/company/checkcompany</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;signedInClientId&quot;:1000005,&quot;clientId&quot;:1000005,&quot;permissionClientId&quot;:1000005,&quot;permissionRoleId&quot;:1,&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SecureClientRole" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SecureClientRole</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;secureClientRolePart&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1394090209">&quot;signedInCompanyCode&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1_ClerkByUserId=208" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">UserId</stringProp>
                  <stringProp name="Argument.value">208</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/clerk/clerkByUser</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Clickonprojectmodule&amp;refresh" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.1_Getschemas01" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;TypeName&quot;:&quot;MatrixBackgroundDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Common&quot;},{&quot;TypeName&quot;:&quot;MatrixFontDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Common&quot;},{&quot;TypeName&quot;:&quot;ExcelProfileDetailDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Common&quot;},{&quot;TypeName&quot;:&quot;StatusHistoryDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Common&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschemas</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.2_Getschemas02" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;TypeName&quot;:&quot;CharacteristicDataDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Characteristic&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschemas</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.3_Gettdatalanguageinfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/getdatalanguageinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.4_ProjectDto" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleSubModule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleSubModule</stringProp>
                  <stringProp name="Argument.value">Project.Main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                  <stringProp name="Argument.value">ProjectDto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschema</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.5_Project.main01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/containerdefinition</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.6_Project.main02" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="internalModuleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">internalModuleName</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/dependentdata/containerslist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.7_project.main03" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/module-config</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.8_project.main04" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleName</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/gettabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.9_project.main05" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/entitycreation/load/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.10_project.main06" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">Project.Main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/moduleconfig/load/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.11_GenerationInfo01" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;RubricId&quot;:85}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/company/number/generationinfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.12_EntityId=3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ppsEntityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ppsEntityId</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/productionplanning/common/getRubricCatId</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.13_GenerationInfo02" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;RubricId&quot;:74}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/company/number/generationinfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.14_EntityId=11" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ppsEntityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ppsEntityId</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/productionplanning/common/getRubricCatId</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.15_GenerationInfo03" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;RubricId&quot;:75}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/company/number/generationinfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.16_getschemas" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;TypeName&quot;:&quot;Project2ClerkDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;GeneralDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;TenderResultDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;ScheduleDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Schedule&quot;},{&quot;TypeName&quot;:&quot;Schedule2ClerkDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Schedule&quot;},{&quot;TypeName&quot;:&quot;TimelineDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Schedule&quot;},{&quot;TypeName&quot;:&quot;LocationDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Location&quot;},{&quot;TypeName&quot;:&quot;CurrencyRateDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;CurrencyConversionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Currency&quot;},{&quot;TypeName&quot;:&quot;BoqItemDto&quot;,&quot;ModuleSubModule&quot;:&quot;Boq.Main&quot;},{&quot;TypeName&quot;:&quot;BoqHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Boq.Main&quot;},{&quot;TypeName&quot;:&quot;EstHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Main&quot;},{&quot;TypeName&quot;:&quot;PrjCostCodesDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.CostCodes&quot;},{&quot;TypeName&quot;:&quot;UpdatePriceFromPriceListDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.CostCodes&quot;},{&quot;TypeName&quot;:&quot;CostCodeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.CostCodes&quot;},{&quot;TypeName&quot;:&quot;ProjectCostCodesJobRateDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.CostCodes&quot;},{&quot;TypeName&quot;:&quot;PrjMaterialDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Material&quot;},{&quot;TypeName&quot;:&quot;MaterialDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Material&quot;},{&quot;TypeName&quot;:&quot;PrjMaterialPriceConditionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Material&quot;},{&quot;TypeName&quot;:&quot;Project2BusinessPartnerDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;Project2BusinessPartnerContactDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;SaleDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;KeyFigureDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;BidHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Bid&quot;},{&quot;TypeName&quot;:&quot;GeneralsDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Bid&quot;},{&quot;TypeName&quot;:&quot;GeneralsDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Billing&quot;},{&quot;TypeName&quot;:&quot;GeneralsDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Contract&quot;},{&quot;TypeName&quot;:&quot;GeneralsDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Wip&quot;},{&quot;TypeName&quot;:&quot;OrdHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Contract&quot;},{&quot;TypeName&quot;:&quot;BilHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Billing&quot;},{&quot;TypeName&quot;:&quot;WipHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Wip&quot;},{&quot;TypeName&quot;:&quot;MaterialPriceConditionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Material&quot;},{&quot;TypeName&quot;:&quot;ModelDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Project&quot;},{&quot;TypeName&quot;:&quot;ModelFileDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Project&quot;},{&quot;TypeName&quot;:&quot;ModelPartDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Project&quot;},{&quot;TypeName&quot;:&quot;PrjEstRuleDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Rule&quot;},{&quot;TypeName&quot;:&quot;PrjEstRuleParamDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Rule&quot;},{&quot;TypeName&quot;:&quot;EstPrjParamDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Parameter&quot;},{&quot;TypeName&quot;:&quot;DocumentDto&quot;,&quot;ModuleSubModule&quot;:&quot;Documents.Project&quot;},{&quot;TypeName&quot;:&quot;DocumentRevisionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Documents.Project&quot;},{&quot;TypeName&quot;:&quot;ObjectAttributeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Main&quot;},{&quot;TypeName&quot;:&quot;ViewerLegendItemDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Main&quot;},{&quot;TypeName&quot;:&quot;InstanceHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;ConstructionSystem.Project&quot;},{&quot;TypeName&quot;:&quot;ChangeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Change.Main&quot;},{&quot;TypeName&quot;:&quot;HeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Object.Project&quot;},{&quot;TypeName&quot;:&quot;LevelDto&quot;,&quot;ModuleSubModule&quot;:&quot;Object.Project&quot;},{&quot;TypeName&quot;:&quot;SortCode01Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode02Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode03Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode04Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode05Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode06Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode07Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode08Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode09Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;SortCode10Dto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Structures&quot;},{&quot;TypeName&quot;:&quot;EstRuleParamValueDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Rule&quot;},{&quot;TypeName&quot;:&quot;HeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;ProductionPlanning.Header&quot;},{&quot;TypeName&quot;:&quot;EventDto&quot;,&quot;ModuleSubModule&quot;:&quot;ProductionPlanning.Common&quot;},{&quot;TypeName&quot;:&quot;Header2ClerkDto&quot;,&quot;ModuleSubModule&quot;:&quot;ProductionPlanning.Header&quot;},{&quot;TypeName&quot;:&quot;RequisitionDto&quot;,&quot;ModuleSubModule&quot;:&quot;ProductionPlanning.Mounting&quot;},{&quot;TypeName&quot;:&quot;EngHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;ProductionPlanning.Engineering&quot;},{&quot;TypeName&quot;:&quot;ProjectPriceListDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.CostCodes&quot;},{&quot;TypeName&quot;:&quot;ProjectStockDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Stock&quot;},{&quot;TypeName&quot;:&quot;ProjectStockLocationDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Stock&quot;},{&quot;TypeName&quot;:&quot;ProjectStock2MaterialDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Stock&quot;},{&quot;TypeName&quot;:&quot;BidBillingschemaDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Bid&quot;},{&quot;TypeName&quot;:&quot;AccessObject2GrpRoleDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;OrdBillingschemaDto&quot;,&quot;ModuleSubModule&quot;:&quot;Sales.Contract&quot;},{&quot;TypeName&quot;:&quot;ProjectAddressDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;Project2CertificateDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;EstLineItemSelStatementDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Main&quot;},{&quot;TypeName&quot;:&quot;RateBookDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;ModelRulesetDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Evaluation&quot;},{&quot;TypeName&quot;:&quot;ModelRulesetGroupDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Evaluation&quot;},{&quot;TypeName&quot;:&quot;ModelRuleDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Evaluation&quot;},{&quot;TypeName&quot;:&quot;HeaderDocumentDto&quot;,&quot;ModuleSubModule&quot;:&quot;Object.Project&quot;},{&quot;TypeName&quot;:&quot;Project2EstAssemblyDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Assembly&quot;},{&quot;TypeName&quot;:&quot;Prj2EstPltAssemblyDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Plantassembly&quot;},{&quot;TypeName&quot;:&quot;EstLineItemDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Main&quot;},{&quot;TypeName&quot;:&quot;EstLineItemDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Assemblies&quot;},{&quot;TypeName&quot;:&quot;EstResourceDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Main&quot;},{&quot;TypeName&quot;:&quot;HeaderPparamDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.PriceCondition&quot;},{&quot;TypeName&quot;:&quot;ProjectExceptionDayDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Calendar&quot;},{&quot;TypeName&quot;:&quot;CostGroupCatDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.CostGroups&quot;},{&quot;TypeName&quot;:&quot;DocumentHistoryDto&quot;,&quot;ModuleSubModule&quot;:&quot;Documents.Project&quot;},{&quot;TypeName&quot;:&quot;ProjectReleaseDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;CostGroupDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;CostGroupCatalogDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;DataTree2ModelDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Administration&quot;},{&quot;TypeName&quot;:&quot;ModelComparePropertykeyBlackListDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Administration&quot;},{&quot;TypeName&quot;:&quot;MtoPowerbiDto&quot;,&quot;ModuleSubModule&quot;:&quot;Mtwo.ControlTower&quot;},{&quot;TypeName&quot;:&quot;MtoPowerbiitemDto&quot;,&quot;ModuleSubModule&quot;:&quot;Mtwo.ControlTower&quot;},{&quot;TypeName&quot;:&quot;ClerkDataDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.Common&quot;},{&quot;TypeName&quot;:&quot;EstCrewMixDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.EfbSheets&quot;},{&quot;TypeName&quot;:&quot;EstAverageWageDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.EfbSheets&quot;},{&quot;TypeName&quot;:&quot;EstCrewMixAfDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.EfbSheets&quot;},{&quot;TypeName&quot;:&quot;EstCrewMixAfsnDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.EfbSheets&quot;},{&quot;TypeName&quot;:&quot;PrjCrewMix2CostCodeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.EfbSheets&quot;},{&quot;TypeName&quot;:&quot;Document2mdlObjectDto&quot;,&quot;ModuleSubModule&quot;:&quot;Documents.Project&quot;},{&quot;TypeName&quot;:&quot;ModelStakeholderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Model.Project&quot;},{&quot;TypeName&quot;:&quot;ProjectBillToDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;ActionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;ActionEmployeeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;BiddingConsortiumDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;EstAssemblyCatDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Assemblies&quot;},{&quot;TypeName&quot;:&quot;PrcConfiguration2Prj2TextTypeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.ProcurementConfiguration&quot;},{&quot;TypeName&quot;:&quot;PrcConfigurationDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.ProcurementConfiguration&quot;},{&quot;TypeName&quot;:&quot;Project2SalesTaxCodeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;SalesTaxMatrixDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Main&quot;},{&quot;TypeName&quot;:&quot;QtoHeaderDto&quot;,&quot;ModuleSubModule&quot;:&quot;Qto.Main&quot;},{&quot;TypeName&quot;:&quot;EstimateProjectHeader2ClerkDto&quot;,&quot;ModuleSubModule&quot;:&quot;Estimate.Project&quot;},{&quot;TypeName&quot;:&quot;SubsidiaryDto&quot;,&quot;ModuleSubModule&quot;:&quot;BusinessPartner.Main&quot;},{&quot;TypeName&quot;:&quot;PrcConfiguration2Prj2TextTypeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Basics.ProcurementConfiguration&quot;},{&quot;TypeName&quot;:&quot;JobDto&quot;,&quot;ModuleSubModule&quot;:&quot;Logistic.Job&quot;},{&quot;TypeName&quot;:&quot;CalendarDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Calendar&quot;},{&quot;TypeName&quot;:&quot;ExceptionDayDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Calendar&quot;},{&quot;TypeName&quot;:&quot;WeekdayDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Calendar&quot;},{&quot;TypeName&quot;:&quot;WorkdayDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Calendar&quot;},{&quot;TypeName&quot;:&quot;WorkHourDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Calendar&quot;},{&quot;TypeName&quot;:&quot;ProjectCalendarDto&quot;,&quot;ModuleSubModule&quot;:&quot;Project.Calendar&quot;},{&quot;TypeName&quot;:&quot;ChangeDto&quot;,&quot;ModuleSubModule&quot;:&quot;Change.Main&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschemas</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.17_StandardRecordPerPage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/systemoption/standardRecordPerPage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.18_project.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleName</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/audittrail/audittrailisactive</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.19_project.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="internalName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">internalName</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/listmodulenavcomconfig</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.20_module=project.main&amp;culture=en-gb" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="culture" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">culture</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">project.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/docu/hasvideo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.21_uploadoptions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/document/uploadoptions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.22_conditionType=2&amp;fakeCreate=true&amp;mainItemId=-1&amp;parentId=-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="conditionType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">conditionType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="parentId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">parentId</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fakeCreate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fakeCreate</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/matrix/createCondition</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.23_getGenWizConfigByIds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[3042,3043,3044,3064,3064,3064,3064]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/genwizard/instance/getGenWizConfigByIds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.24_dataLayoutSettings" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="settingsKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">settingsKey</stringProp>
                  <stringProp name="Argument.value">dataLayoutSettings</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/desktop/usersettings/loadmergedsetting</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.25_map" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/systemoption/map</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.26_saveconfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;BasModuletabviewFk&quot;:1001687,&quot;Guid&quot;:&quot;e33fc83676e9439a959e4d8c2f4435b6&quot;,&quot;Propertyconfig&quot;:&quot;{\&quot;fid\&quot;:\&quot;project.main.projectdetailform\&quot;,\&quot;groups\&quot;:[{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;header\&quot;:\&quot;Basic Data\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityProperties\&quot;,\&quot;sortOrder\&quot;:1,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;header\&quot;:\&quot;Customer\&quot;,\&quot;header$tr$\&quot;:\&quot;project.main.customerGroup\&quot;,\&quot;sortOrder\&quot;:2,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;header\&quot;:\&quot;Address\&quot;,\&quot;header$tr$\&quot;:\&quot;project.main.projectAddressGroup\&quot;,\&quot;sortOrder\&quot;:3,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;header\&quot;:\&quot;Contract\&quot;,\&quot;header$tr$\&quot;:\&quot;project.main.contractGroup\&quot;,\&quot;sortOrder\&quot;:4,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;header\&quot;:\&quot;Submission\&quot;,\&quot;header$tr$\&quot;:\&quot;project.main.submissionGroup\&quot;,\&quot;sortOrder\&quot;:5,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;warrantyGroup\&quot;,\&quot;header\&quot;:\&quot;Warranty\&quot;,\&quot;header$tr$\&quot;:\&quot;project.main.warrantyGroup\&quot;,\&quot;sortOrder\&quot;:6,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;header\&quot;:\&quot;Settings\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.toolbarSetting\&quot;,\&quot;sortOrder\&quot;:7,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;header\&quot;:\&quot;User-Defined Texts\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.UserdefTexts\&quot;,\&quot;sortOrder\&quot;:8,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;header\&quot;:\&quot;History\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityHistory\&quot;,\&quot;sortOrder\&quot;:9,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true}],\&quot;rows\&quot;:[{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;statusfk\&quot;,\&quot;label\&quot;:\&quot;Status\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;StatusFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityStatus\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;project.main.status\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;project.main.status\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-status-by-rubric-category-filter\&quot;,\&quot;filter\&quot;:{\&quot;field\&quot;:\&quot;RubricCategoryFk\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-status-by-rubric-category-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_CATEGORY_FK\&quot;,\&quot;showIcon\&quot;:true},\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:\&quot;platformStatusIconService\&quot;,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;6a6870747b3829a5623da136\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;typefk\&quot;,\&quot;label\&quot;:\&quot;Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;TypeFk\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityType\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.projecttype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.projecttype\&quot;,\&quot;filter\&quot;:{\&quot;showIcon\&quot;:true,\&quot;imageSelectorService\&quot;:\&quot;basicsCustomizeProjectTypeIconService\&quot;},\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:\&quot;basicsCustomizeProjectTypeIconService\&quot;,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;a5b3378e6520bed343f79563\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectno\&quot;,\&quot;label\&quot;:\&quot;Project Number\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;ProjectNo\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:16,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.projectNo\&quot;,\&quot;navigator\&quot;:{\&quot;moduleName\&quot;:\&quot;iTWO 5D\&quot;,\&quot;targetID\&quot;:\&quot;project.main.project\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectindex\&quot;,\&quot;label\&quot;:\&quot;Index\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;ProjectIndex\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityIndex\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectname\&quot;,\&quot;label\&quot;:\&quot;Name\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;ProjectName\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityName\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectname2\&quot;,\&quot;label\&quot;:\&quot;Name 2\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;ProjectName2\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;project.main.name2\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;catalogconfigtypefk\&quot;,\&quot;label\&quot;:\&quot;Cost Group Configuration\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;CatalogConfigTypeFk\&quot;,\&quot;sortOrder\&quot;:12,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.costGroupConfiguration\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;currencyfk\&quot;,\&quot;label\&quot;:\&quot;Currency\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CurrencyFk\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCurrency\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Currency\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:false,\&quot;lookupType\&quot;:\&quot;basicsCurrencyLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsCurrencyLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsCurrencyLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:true,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Currency\&quot;,\&quot;field\&quot;:\&quot;Currency\&quot;,\&quot;name\&quot;:\&quot;Currency\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCurrency\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;e4938ef1c6744c348a1265db2354a8d0\&quot;},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;clerkfk\&quot;,\&quot;label\&quot;:\&quot;Clerk\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ClerkFk\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;basics.clerk.entityClerk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;cloud-clerk-clerk-dialog\&quot;,\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false,\&quot;filterKey\&quot;:\&quot;project-clerk-filter\&quot;},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;startdate\&quot;,\&quot;label\&quot;:\&quot;Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;StartDate\&quot;,\&quot;sortOrder\&quot;:13,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityStartDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;enddate\&quot;,\&quot;label\&quot;:\&quot;Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;EndDate\&quot;,\&quot;sortOrder\&quot;:14,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityEndDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;rubriccategoryfk\&quot;,\&quot;label\&quot;:\&quot;Rubric Category\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RubricCategoryFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.entityRubric\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-rubric-category-by-rubric-filter\&quot;,\&quot;filter\&quot;:{\&quot;field\&quot;:\&quot;RubricFk\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-rubric-category-by-rubric-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_FK\&quot;},\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;9115bfd1802d1ae0260abd27\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;groupfk\&quot;,\&quot;label\&quot;:\&quot;Group\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;GroupFk\&quot;,\&quot;sortOrder\&quot;:15,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityGroup\&quot;,\&quot;directive\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;navigator\&quot;:false,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;projectLookupGroupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectLookupGroupDataService\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;projectLookupGroupDataService\&quot;,\&quot;enableCache\&quot;:true,\&quot;disableDataCaching\&quot;:true,\&quot;showClearButton\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;description\&quot;,\&quot;width\&quot;:300,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;0ecbb96487ce4433baf69a4833c80f6a\&quot;,\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;PrjGroupParentFk\&quot;,\&quot;childProp\&quot;:\&quot;SubGroups\&quot;},\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;businessunitfk\&quot;,\&quot;label\&quot;:\&quot;Business Unit\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BusinessUnitFk\&quot;,\&quot;sortOrder\&quot;:16,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityBusinessUnit\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.businessunit\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.businessunit\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;7701b6199bccfbb43bc204a6\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;contracttypefk\&quot;,\&quot;label\&quot;:\&quot;Contract Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ContractTypeFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityContractTypeFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;project.main.contracttype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;project.main.contracttype\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;25b777ea71ea684f49b890cc\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;contractno\&quot;,\&quot;label\&quot;:\&quot;Contract No.\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;ContractNo\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:16,\&quot;label$tr$\&quot;:\&quot;project.main.entityContractNo\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;businesspartnerfk\&quot;,\&quot;label\&quot;:\&quot;Business Partner\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BusinessPartnerFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityBusinessPartner\&quot;,\&quot;directive\&quot;:\&quot;business-partner-main-business-partner-dialog\&quot;,\&quot;options\&quot;:{\&quot;initValueField\&quot;:\&quot;BusinesspartnerBpName1\&quot;,\&quot;showClearButton\&quot;:true,\&quot;mainService\&quot;:\&quot;projectMainService\&quot;,\&quot;BusinessPartnerField\&quot;:\&quot;BusinesspartnerFk\&quot;,\&quot;SubsidiaryField\&quot;:\&quot;SubsidiaryFk\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;subsidiaryfk\&quot;,\&quot;label\&quot;:\&quot;Branch\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;SubsidiaryFk\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entitySubsidiary\&quot;,\&quot;directive\&quot;:\&quot;business-partner-main-subsidiary-lookup\&quot;,\&quot;options\&quot;:{\&quot;initValueField\&quot;:\&quot;SubsidiaryAddress\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-project-subsidiary-filter\&quot;,\&quot;showClearButton\&quot;:true,\&quot;displayMember\&quot;:\&quot;AddressLine\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;contactfk\&quot;,\&quot;label\&quot;:\&quot;Contact\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ContactFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityContact\&quot;,\&quot;directive\&quot;:\&quot;business-partner-main-filtered-contact-combobox\&quot;,\&quot;options\&quot;:{\&quot;initValueField\&quot;:\&quot;FamilyName\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-contact-by-bizpartner-server-filter\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;customerfk\&quot;,\&quot;label\&quot;:\&quot;Customer\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CustomerFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityCustomer\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;business-partner-main-customer-lookup\&quot;,\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;lookupOptions\&quot;:{\&quot;filterKey\&quot;:\&quot;project-main-customer-subsidiary-filter\&quot;,\&quot;showClearButton\&quot;:true},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;paymenttermpafk\&quot;,\&quot;label\&quot;:\&quot;Payment Term (PA)\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PaymentTermPaFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityPaymentTermPa\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.paymentterm\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.paymentterm\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;79f7eb2f9e7bc29589762963\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;paymenttermfifk\&quot;,\&quot;label\&quot;:\&quot;Payment Term (FI)\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PaymentTermFiFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityPaymentTermFi\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.paymentterm\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.paymentterm\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;dadba1db7117d046b771b6de\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;billingschemafk\&quot;,\&quot;label\&quot;:\&quot;Billing Schema\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BillingSchemaFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityBillingSchema\&quot;,\&quot;directive\&quot;:\&quot;basics-billing-schema-billing-schema-combobox\&quot;,\&quot;options\&quot;:{\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;customergroupfk\&quot;,\&quot;label\&quot;:\&quot;Customer Group\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CustomerGroupFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityCustomerGroup\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;businesspartner.customergroup\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;businesspartner.customergroup\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;c1727118589794ec62e6df36\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;customerGroup\&quot;,\&quot;rid\&quot;:\&quot;realestatefk\&quot;,\&quot;label\&quot;:\&quot;Real Estate\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RealEstateFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityRealEstate\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;businesspartner.lookup.realestate\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;OBJECT_NAME\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;businesspartner.lookup.realestate\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;a8c1d6f608f3a93b07056628\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;addressfk\&quot;,\&quot;label\&quot;:\&quot;Address\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;AddressEntity\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;basics.company.entityAddress\&quot;,\&quot;directive\&quot;:\&quot;basics-common-address-dialog\&quot;,\&quot;options\&quot;:{\&quot;titleField\&quot;:\&quot;cloud.common.entityAddress\&quot;,\&quot;foreignKey\&quot;:\&quot;AddressFk\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;telephonenumberfk\&quot;,\&quot;label\&quot;:\&quot;Phone Number\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;TelephoneNumber\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.TelephoneDialogPhoneNumber\&quot;,\&quot;directive\&quot;:\&quot;basics-common-telephone-dialog\&quot;,\&quot;options\&quot;:{\&quot;titleField\&quot;:\&quot;cloud.common.TelephoneDialogPhoneNumber\&quot;,\&quot;foreignKey\&quot;:\&quot;TelephoneNumberFk\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;telephonetelefaxfk\&quot;,\&quot;label\&quot;:\&quot;Telefax\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;TelephoneNumberTelefax\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.fax\&quot;,\&quot;directive\&quot;:\&quot;basics-common-telephone-dialog\&quot;,\&quot;options\&quot;:{\&quot;titleField\&quot;:\&quot;cloud.common.fax\&quot;,\&quot;foreignKey\&quot;:\&quot;TelephoneTelefaxFk\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;telephonemobilfk\&quot;,\&quot;label\&quot;:\&quot;Mobile\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;TelephoneMobil\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.mobile\&quot;,\&quot;directive\&quot;:\&quot;basics-common-telephone-dialog\&quot;,\&quot;options\&quot;:{\&quot;titleField\&quot;:\&quot;cloud.common.mobile\&quot;,\&quot;foreignKey\&quot;:\&quot;TelephoneMobilFk\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;email\&quot;,\&quot;label\&quot;:\&quot;E-Mail\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;Email\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:100,\&quot;label$tr$\&quot;:\&quot;cloud.common.email\&quot;,\&quot;directive\&quot;:\&quot;basics-common-email-input\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectMainService\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;countryfk\&quot;,\&quot;label\&quot;:\&quot;Country\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CountryFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCountry\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Iso2\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsCountryLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsCountryLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsCountryLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:true,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Iso2\&quot;,\&quot;field\&quot;:\&quot;Iso2\&quot;,\&quot;name\&quot;:\&quot;Iso2\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityISO2\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;0922edfc4eb04333a01a6bf20e5391ac\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;projectAddressGroup\&quot;,\&quot;rid\&quot;:\&quot;regionfk\&quot;,\&quot;label\&quot;:\&quot;Region\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RegionFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityRegion\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;project.main.region\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;project.main.region\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;0a9146551c55c4991bd3b874\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;datereceipt\&quot;,\&quot;label\&quot;:\&quot;Tender Receipt\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;DateReceipt\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityTenderReceipt\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;closingdatetime\&quot;,\&quot;label\&quot;:\&quot;Closing Date\&quot;,\&quot;type\&quot;:\&quot;datetimeutc\&quot;,\&quot;model\&quot;:\&quot;ClosingDatetime\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityClosingDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;closinglocation\&quot;,\&quot;label\&quot;:\&quot;Closing Location\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;ClosingLocation\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;project.main.entityClosingLocation\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;plannedawarddate\&quot;,\&quot;label\&quot;:\&quot;Planned Award\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;PlannedAwardDate\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityPlannedAward\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;tenderdate\&quot;,\&quot;label\&quot;:\&quot;Tender Date\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;TenderDate\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityTenderDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;publicationdate\&quot;,\&quot;label\&quot;:\&quot;Published\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;PublicationDate\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityPublicationDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;submissionGroup\&quot;,\&quot;rid\&quot;:\&quot;tenderremark\&quot;,\&quot;label\&quot;:\&quot;Tender Remark\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;TenderRemark\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;project.main.entityTenderRemark\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;wicfk\&quot;,\&quot;label\&quot;:\&quot;WIC\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;WICFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityWIC\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;masterdata.context.wic\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;masterdata.context.wic\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;aa928c7403f3911be218980f\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;calloffno\&quot;,\&quot;label\&quot;:\&quot;Call Off No.\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;CallOffNo\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;project.main.entityCallOffNo\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;calloffdate\&quot;,\&quot;label\&quot;:\&quot;Call Off Date\&quot;,\&quot;type\&quot;:\&quot;date\&quot;,\&quot;model\&quot;:\&quot;CallOffDate\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityCallOffDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;calloffremark\&quot;,\&quot;label\&quot;:\&quot;Call Off Remark\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;CallOffRemark\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;project.main.entityCallOffRemark\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectdescription\&quot;,\&quot;label\&quot;:\&quot;Description\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;ProjectDescription\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;remark\&quot;,\&quot;label\&quot;:\&quot;Remarks\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;Remark\&quot;,\&quot;sortOrder\&quot;:17,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityRemark\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;warrantyGroup\&quot;,\&quot;rid\&quot;:\&quot;handoverdate\&quot;,\&quot;label\&quot;:\&quot;Handover\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;HandoverDate\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityHandoverDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;warrantyGroup\&quot;,\&quot;rid\&quot;:\&quot;warrentystart\&quot;,\&quot;label\&quot;:\&quot;Warranty Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;WarrentyStart\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityWarStartDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;warrantyGroup\&quot;,\&quot;rid\&quot;:\&quot;warrentyend\&quot;,\&quot;label\&quot;:\&quot;Warranty End\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;WarrentyEnd\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityWarEndDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;warrantyGroup\&quot;,\&quot;rid\&quot;:\&quot;warrentyremark\&quot;,\&quot;label\&quot;:\&quot;Warranty Remark\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;WarrentyRemark\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;project.main.entityWarrentyRemark\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;assetmasterfk\&quot;,\&quot;label\&quot;:\&quot;Asset Master\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;AssetMasterFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;estimate.main.mdcAssetMasterFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-asset-master-dialog\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;matchcode\&quot;,\&quot;label\&quot;:\&quot;Match Code\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Matchcode\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;project.main.entityMatchCode\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;calendarfk\&quot;,\&quot;label\&quot;:\&quot;Calendar\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CalendarFk\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCalCalendarFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;scheduling-calendar-filter-lookup\&quot;,\&quot;descriptionMember\&quot;:\&quot;Rate\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true,\&quot;defaultFilter\&quot;:{\&quot;calendarType\&quot;:\&quot;enterprise\&quot;,\&quot;projectId\&quot;:\&quot;Id\&quot;},\&quot;version\&quot;:3},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;companyresponsiblefk\&quot;,\&quot;label\&quot;:\&quot;Profit Center\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CompanyResponsibleFk\&quot;,\&quot;sortOrder\&quot;:12,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.entityProfitCenter\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-company-company-lookup\&quot;,\&quot;descriptionMember\&quot;:\&quot;CompanyName\&quot;,\&quot;showClearButton\&quot;:false,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;change\&quot;:\&quot;formOptions.onPropertyChanged\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;contractGroup\&quot;,\&quot;rid\&quot;:\&quot;languagecontractfk\&quot;,\&quot;label\&quot;:\&quot;Language\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;LanguageContractFk\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;basics.customize.language\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.language\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.language\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;6cda722397e525010ceb3aaf\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;controllingunittemplatefk\&quot;,\&quot;label\&quot;:\&quot;Controlling Unit Template\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ControllingUnitTemplateFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.controllingUnitTemplate\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;project.main.controllingunittemplate\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;project.main.controllingunittemplate\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;9315b4a0966678ebf26254b7\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;controltemplatefk\&quot;,\&quot;label\&quot;:\&quot;Controlling Template\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ControltemplateFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.controllingTemplate\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;controllingControllingunittemplateLookupService\&quot;,\&quot;dataServiceName\&quot;:\&quot;controllingControllingunittemplateLookupService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;controllingControllingunittemplateLookupService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;2c2afe968f6f48ea9c638f289defa1a7\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefined1\&quot;,\&quot;label\&quot;:\&quot;Text 1\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Userdefined1\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefined2\&quot;,\&quot;label\&quot;:\&quot;Text 2\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Userdefined2\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefined3\&quot;,\&quot;label\&quot;:\&quot;Text 3\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Userdefined3\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefined4\&quot;,\&quot;label\&quot;:\&quot;Text 4\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Userdefined4\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;isadministration\&quot;,\&quot;label\&quot;:\&quot;Is Administration\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsAdministration\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.isAdministration\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;istemplate\&quot;,\&quot;label\&quot;:\&quot;Is Template\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsTemplate\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.isTemplate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;isintercompany\&quot;,\&quot;label\&quot;:\&quot;Publish\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsInterCompany\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.isInterCompany\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefined5\&quot;,\&quot;label\&quot;:\&quot;Text 5\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Userdefined5\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;prjcontenttypefk\&quot;,\&quot;label\&quot;:\&quot;Content Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PrjContentTypeFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.prjContentTypeFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.projectcontenttype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.projectcontenttype\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;ed2cc1cd0028bb46ffdae543\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;dateeffective\&quot;,\&quot;label\&quot;:\&quot;Date Effective\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;DateEffective\&quot;,\&quot;sortOrder\&quot;:18,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;basics.common.dateEffective\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;rubriccatlocationfk\&quot;,\&quot;label\&quot;:\&quot;Rubric Category for Locations\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RubricCatLocationFk\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityRubricLocation\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;filterKey\&quot;:\&quot;project-location-rubric-category-by-rubric-filter\&quot;,\&quot;filter\&quot;:{\&quot;field\&quot;:\&quot;RubricFk\&quot;,\&quot;filterKey\&quot;:\&quot;project-location-rubric-category-by-rubric-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_FK\&quot;},\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;fe25ceb340516d9d4ed07224\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;prjcategoryfk\&quot;,\&quot;label\&quot;:\&quot;Project Category\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PrjCategoryFk\&quot;,\&quot;sortOrder\&quot;:19,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.prjCategory\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.projectcategory\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.projectcategory\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;2de07808dde6ce400f34180d\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;prjclassificationfk\&quot;,\&quot;label\&quot;:\&quot;Project Classification\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PrjClassificationFk\&quot;,\&quot;sortOrder\&quot;:20,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.prjClassification\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.projectclassification\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.projectclassification\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;fb365a7cc6cbf0c886ce76f4\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;prjkindfk\&quot;,\&quot;label\&quot;:\&quot;Project Kind\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PrjKindFk\&quot;,\&quot;sortOrder\&quot;:21,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.prjKind\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.projectkind\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.projectkind\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;30b59bc305a7aa2a02124afe\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;rubriccategorysalesfk\&quot;,\&quot;label\&quot;:\&quot;Rubric Category for Sales\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RubricCategorySalesFk\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityRubricSales\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;filterKey\&quot;:\&quot;project-sales-rubric-category-by-rubric-filter\&quot;,\&quot;filter\&quot;:{\&quot;field\&quot;:\&quot;RubricFk\&quot;,\&quot;filterKey\&quot;:\&quot;project-sales-rubric-category-by-rubric-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_FK\&quot;},\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;8e3e0f83075b599d70f1f966\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;quantitycontrolfk\&quot;,\&quot;label\&quot;:\&quot;Project Quantity Control\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;QuantityControlFk\&quot;,\&quot;sortOrder\&quot;:22,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;basics.customize.projectquantitycontrol\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsCustomProjectQuantityControlLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsCustomProjectQuantityControlLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsCustomProjectQuantityControlLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;project-main-quantity-control-is-live-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:true,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;formatterOptions\&quot;:{\&quot;imageSelector\&quot;:\&quot;platformStatusIconService\&quot;},\&quot;width\&quot;:100,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;width\&quot;:250,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;6d532eff2a7843dcbc10d454c004b378\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;iscompleteperformance\&quot;,\&quot;label\&quot;:\&quot;Complete Performance\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsCompletePerformance\&quot;,\&quot;sortOrder\&quot;:13,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;project.main.isCompletePerformance\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;settingGroup\&quot;,\&quot;rid\&quot;:\&quot;rubriccategorycontrollingunitfk\&quot;,\&quot;label\&quot;:\&quot;Rubric Category for Controlling Unit\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;RubricCategoryControllingUnitFk\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;project.main.entityRubricCategoryControllingUnitFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.lookup.rubriccategory\&quot;,\&quot;filterKey\&quot;:\&quot;project-controlling-unit-rubric-category-by-rubric-filter\&quot;,\&quot;filter\&quot;:{\&quot;field\&quot;:\&quot;RubricFk\&quot;,\&quot;filterKey\&quot;:\&quot;project-controlling-unit-rubric-category-by-rubric-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_FK\&quot;},\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;c92671be73337e21b8d2f303\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;updated\&quot;,\&quot;label\&quot;:\&quot;Updated\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.updated\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUpdated\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;inserted\&quot;,\&quot;label\&quot;:\&quot;Inserted\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.inserted\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityInserted\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true}]}&quot;,&quot;Gridconfig&quot;:&quot;null&quot;,&quot;Viewdata&quot;:null,&quot;InsertedBy&quot;:208,&quot;UpdatedBy&quot;:null,&quot;InsertedAt&quot;:&quot;2022-07-20T08:49:58.137&quot;,&quot;UpdatedAt&quot;:null,&quot;Version&quot;:1,&quot;ModuletabviewEntity&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/saveconfig</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.27_isenableteamschatnavigation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/systemoption/isenableteamschatnavigation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.28_filtered" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;Pattern&quot;:null,&quot;PageSize&quot;:250,&quot;PageNumber&quot;:0,&quot;UseCurrentClient&quot;:true,&quot;IncludeNonActiveItems&quot;:false,&quot;ProjectContextId&quot;:1000425,&quot;PinningContext&quot;:[{&quot;token&quot;:&quot;project.main&quot;,&quot;id&quot;:{&quot;Id&quot;:1000425},&quot;info&quot;:&quot;8092 - Dip1&quot;}],&quot;ExecutionHints&quot;:false,&quot;isReadingDueToRefresh&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/filtered</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-193399884">{&quot;FilterResult&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.29_getexchangerates?projectId=1000425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.30_loaduserinfobyids" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[208]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/services/platform/loaduserinfobyids</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.31_GetSalesResultByProject?projectId=1000425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/sales/contract/GetSalesResultByProject</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.32_loaduserinfobyids" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[204]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/services/platform/loaduserinfobyids</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.33_filtered" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;Pattern&quot;:null,&quot;PageSize&quot;:250,&quot;PageNumber&quot;:0,&quot;UseCurrentClient&quot;:true,&quot;IncludeNonActiveItems&quot;:false,&quot;ProjectContextId&quot;:null,&quot;PinningContext&quot;:[],&quot;ExecutionHints&quot;:false,&quot;isReadingDueToRefresh&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/filtered</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.34_currencyconversion/getexchangerates?projectId=1000028" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000028</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.35_currencyconversion/getexchangerates?projectId=1000425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.36_moduleSubModule=Procurement.Common&amp;typeName=PrcItemAssignmentDto" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleSubModule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleSubModule</stringProp>
                  <stringProp name="Argument.value">Procurement.Common</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                  <stringProp name="Argument.value">PrcItemAssignmentDto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschema</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.37_currencyconversion/getexchangerates?projectId=1000425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.38_loaduserinfobyids" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[1,156,199,207,203,198,157,201,202]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/services/platform/loaduserinfobyids</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.39_GetSalesResultByProject?projectId=1000425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">1000425</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/sales/contract/GetSalesResultByProject</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateProject" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1_main/validate01" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Field2Validate&quot;:5,&quot;NewStringValue&quot;:&quot;234&quot;,&quot;Project&quot;:{&quot;Version&quot;:0,&quot;RubricCategoryFk&quot;:1,&quot;GroupFk&quot;:1000002,&quot;CompanyResponsibleFk&quot;:1000005,&quot;ClerkFk&quot;:0,&quot;ProjectNo&quot;:&quot;&quot;,&quot;ProjectName&quot;:&quot;&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;AssetmasterFk&quot;:null,&quot;ControltemplateFk&quot;:null,&quot;__rt$data&quot;:{&quot;readonly&quot;:[],&quot;errors&quot;:{&quot;ProjectNo&quot;:null,&quot;CatalogConfigTypeFk&quot;:{&quot;error&quot;:&quot;...&quot;,&quot;error$tr$&quot;:&quot;cloud.common.emptyOrNullValueErrorMessage&quot;,&quot;error$tr$param$&quot;:{&quot;fieldName&quot;:&quot;catalogconfigtypefk&quot;}}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.2_module-config?module=project.main" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;IsRole&quot;:false,&quot;IsUser&quot;:true,&quot;Id&quot;:1000266,&quot;ModuleFk&quot;:45,&quot;Guid&quot;:&quot;6df7ca744ab64644b2f791b1ee3dc831&quot;,&quot;UserFk&quot;:null,&quot;AccessRoleFk&quot;:null,&quot;IsSystem&quot;:false,&quot;IsPortal&quot;:false,&quot;Propertyconfig&quot;:&quot;{\&quot;dialogConfig\&quot;:{\&quot;id\&quot;:\&quot;6df7ca744ab64644b2f791b1ee3dc831\&quot;,\&quot;forms\&quot;:{},\&quot;grid\&quot;:{},\&quot;dialog\&quot;:{\&quot;width\&quot;:45,\&quot;height\&quot;:96,\&quot;top\&quot;:1,\&quot;left\&quot;:27},\&quot;custom\&quot;:{}}}&quot;,&quot;Gridconfig&quot;:null,&quot;CustomConfig&quot;:null,&quot;InsertedAt&quot;:&quot;2022-07-20T08:56:16.39Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:&quot;2022-08-04T06:43:47.527Z&quot;,&quot;UpdatedBy&quot;:208,&quot;Version&quot;:12,&quot;IsFormConfig&quot;:false,&quot;isDirty&quot;:true}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/module-config?module=project.main</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.3_main/validate02" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Field2Validate&quot;:5,&quot;NewStringValue&quot;:&quot;${ProjectNo}&quot;,&quot;Project&quot;:{&quot;Version&quot;:0,&quot;RubricCategoryFk&quot;:1,&quot;CatalogConfigTypeFk&quot;:2000002,&quot;GroupFk&quot;:1000002,&quot;CompanyResponsibleFk&quot;:1000005,&quot;ClerkFk&quot;:1000013,&quot;ProjectNo&quot;:&quot;234&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;AssetmasterFk&quot;:null,&quot;ControltemplateFk&quot;:null,&quot;__rt$data&quot;:{&quot;readonly&quot;:[],&quot;errors&quot;:{&quot;ProjectNo&quot;:null,&quot;CatalogConfigTypeFk&quot;:null}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="ProjectNo" enabled="true">
            <stringProp name="variableName">ProjectNo</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <stringProp name="minimumValue">99</stringProp>
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">false</boolProp>
          </RandomVariableConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.4_Projectconfiguredcreate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Version&quot;:0,&quot;RubricCategoryFk&quot;:1,&quot;CatalogConfigTypeFk&quot;:2000002,&quot;GroupFk&quot;:1000002,&quot;CompanyResponsibleFk&quot;:1000005,&quot;ClerkFk&quot;:1000013,&quot;ProjectNo&quot;:&quot;${ProjectNo}&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;AssetmasterFk&quot;:null,&quot;ControltemplateFk&quot;:null,&quot;__rt$data&quot;:{&quot;readonly&quot;:[],&quot;errors&quot;:{&quot;ProjectNo&quot;:null,&quot;CatalogConfigTypeFk&quot;:null}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/configuredcreate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ProjectId1" enabled="true">
              <stringProp name="TestPlan.comments">1000491</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ProjectId1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Id&quot;:(.*?),&quot;StatusFk&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="821677840">&quot;ProjectNo&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.5_treebysection?sectionId=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/group/treebysection</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.6_defaultlistbysection?sectionId=40" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlistbysection</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.7_getexchangerates?projectId=1000491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.8_getexchangerates?projectId=1000491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ratebook/list" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;PKey1&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/ratebook/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.9_lookup=clerk&amp;Id=1000013" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lookup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lookup</stringProp>
                  <stringProp name="Argument.value">clerk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">1000013</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/lookupdata/master/getitembykey</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.10_GetSalesResultByProject?projectId=1000491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/sales/contract/GetSalesResultByProject</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.11_sectionId=1&amp;mainItemId=1000491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ProjectId2" enabled="true">
              <stringProp name="TestPlan.comments">1001949</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ProjectId2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;IsComeBasics&quot;:null,&quot;Id&quot;:(.*?),&quot;CharacteristicFk&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.12_treebysection?sectionId=41" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/group/treebysection</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.13_sectionId=40&amp;mainItemId=1000491" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveProject" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.1_SaveProject" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:2,&quot;CharacteristicDataToSave&quot;:[{&quot;Description&quot;:null,&quot;CharacteristicGroupFk&quot;:1000005,&quot;CharacteristicTypeFk&quot;:1,&quot;IsReadonly&quot;:false,&quot;IsComeBasics&quot;:null,&quot;Id&quot;:${ProjectId2},&quot;CharacteristicFk&quot;:1000011,&quot;CharacteristicSectionFk&quot;:1,&quot;ObjectFk&quot;:${ProjectId1},&quot;ObjectPKey1Fk&quot;:null,&quot;ObjectPKey2Fk&quot;:null,&quot;ObjectPKey3Fk&quot;:null,&quot;ValueBool&quot;:&quot;true&quot;,&quot;ValueNumber&quot;:null,&quot;ValueText&quot;:&quot;true&quot;,&quot;ValueDate&quot;:null,&quot;CharacteristicValueFk&quot;:null,&quot;InsertedAt&quot;:&quot;2022-08-05T05:16:31.6667577Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;CharacteristicEntity&quot;:{&quot;IsVisible&quot;:true,&quot;IsReadonly&quot;:false,&quot;IndexHeaderFk&quot;:0,&quot;Id&quot;:1000011,&quot;CharacteristicGroupFk&quot;:1000005,&quot;Code&quot;:&quot;TRUCK&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:&quot;Truck Char&quot;,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;CharacteristicTypeFk&quot;:1,&quot;DefaultValue&quot;:&quot;true&quot;,&quot;ValidFrom&quot;:null,&quot;ValidTo&quot;:null,&quot;Remark&quot;:null,&quot;InsertedAt&quot;:&quot;2022-07-04T12:35:10.49Z&quot;,&quot;InsertedBy&quot;:199,&quot;UpdatedAt&quot;:&quot;2022-07-04T12:36:07.05Z&quot;,&quot;UpdatedBy&quot;:199,&quot;Version&quot;:2,&quot;ChrctrstcChainEntities_CharacteristicFk&quot;:[],&quot;ChrctrstcChainEntities_ChainedCharacteristicFk&quot;:null,&quot;Chrctrstc2indexEntities&quot;:null},&quot;CharacteristicValueEntity&quot;:null}],&quot;CharacteristicDataToDelete&quot;:[],&quot;MainItemId&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/saveForDefaults</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1115786825">&quot;CharacteristicDataToSave&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.2_UpdateProject" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:2,&quot;MainItemId&quot;:${ProjectId1},&quot;Projects&quot;:[{&quot;TelephoneNumber&quot;:null,&quot;TelephoneNumberTelefax&quot;:null,&quot;TelephoneMobil&quot;:null,&quot;AddressEntity&quot;:null,&quot;LineItemContextId&quot;:0,&quot;HasAcceptedWIPs&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Id&quot;:${ProjectId1},&quot;StatusFk&quot;:4,&quot;TypeFk&quot;:5,&quot;ProjectNo&quot;:&quot;${ProjectNo}&quot;,&quot;ProjectIndex&quot;:0,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CatalogConfigTypeFk&quot;:2000002,&quot;CatalogConfigFk&quot;:2000002,&quot;CurrencyFk&quot;:1,&quot;CompanyFk&quot;:1000005,&quot;ClerkFk&quot;:1000013,&quot;StartDate&quot;:&quot;2022-08-05T05:16:30Z&quot;,&quot;EndDate&quot;:null,&quot;MainProject&quot;:0,&quot;ProjectMainFk&quot;:null,&quot;IsLive&quot;:true,&quot;RubricCategoryFk&quot;:1,&quot;GroupFk&quot;:1000002,&quot;BusinessUnitFk&quot;:44,&quot;ContractTypeFk&quot;:1,&quot;ContractNo&quot;:null,&quot;BusinessPartnerFk&quot;:null,&quot;SubsidiaryFk&quot;:null,&quot;ContactFk&quot;:null,&quot;CustomerFk&quot;:null,&quot;PaymentTermPaFk&quot;:1000002,&quot;PaymentTermFiFk&quot;:1000002,&quot;BillingSchemaFk&quot;:1000001,&quot;CustomerGroupFk&quot;:3,&quot;RealEstateFk&quot;:null,&quot;AddressFk&quot;:null,&quot;TelephoneNumberFk&quot;:null,&quot;TelephoneTelefaxFk&quot;:null,&quot;TelephoneMobilFk&quot;:null,&quot;Email&quot;:null,&quot;CountryFk&quot;:56,&quot;RegionFk&quot;:1,&quot;DateReceipt&quot;:null,&quot;ClosingDatetime&quot;:null,&quot;ClosingLocation&quot;:null,&quot;PlannedAwardDate&quot;:null,&quot;TenderDate&quot;:null,&quot;PublicationDate&quot;:null,&quot;TenderRemark&quot;:null,&quot;WICFk&quot;:null,&quot;CallOffNo&quot;:null,&quot;CallOffDate&quot;:null,&quot;CallOffRemark&quot;:null,&quot;ProjectDescription&quot;:&quot;&quot;,&quot;Remark&quot;:null,&quot;ProjectPath&quot;:null,&quot;ProjectDocPath&quot;:null,&quot;SearchPattern&quot;:null,&quot;HandoverDate&quot;:null,&quot;WarrentyStart&quot;:null,&quot;WarrentyEnd&quot;:null,&quot;WarrentyRemark&quot;:null,&quot;ClassificationFk&quot;:null,&quot;WorkCategoryFk&quot;:null,&quot;AssetMasterFk&quot;:null,&quot;ProjectContextFk&quot;:1000004,&quot;BudgetCodeFk&quot;:null,&quot;Matchcode&quot;:&quot;DIPPACKAGE1&quot;,&quot;CalendarFk&quot;:1,&quot;CompanyResponsibleFk&quot;:1000005,&quot;InternetWebCam&quot;:null,&quot;Distance&quot;:null,&quot;Overnight&quot;:null,&quot;LanguageContractFk&quot;:2,&quot;ProjectIndexAlpha&quot;:&quot;0&quot;,&quot;ControllingUnitTemplateFk&quot;:1000001,&quot;ControltemplateFk&quot;:null,&quot;BasBlobsFk&quot;:null,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null,&quot;Userdefined3&quot;:null,&quot;Userdefined4&quot;:null,&quot;IsAdministration&quot;:false,&quot;IsTemplate&quot;:false,&quot;IsInterCompany&quot;:false,&quot;Userdefined5&quot;:null,&quot;CheckPermission&quot;:false,&quot;PrjContentFk&quot;:null,&quot;PrjContentTypeFk&quot;:null,&quot;InsertedAt&quot;:&quot;2022-08-05T00:00:00Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;DateEffective&quot;:&quot;2022-08-05T05:16:30Z&quot;,&quot;RubricCatLocationFk&quot;:null,&quot;PrjCategoryFk&quot;:1000001,&quot;PrjClassificationFk&quot;:null,&quot;PrjKindFk&quot;:null,&quot;RubricCategorySalesFk&quot;:null,&quot;QuantityControlFk&quot;:3,&quot;IsCompletePerformance&quot;:true,&quot;RubricCategoryControllingUnitFk&quot;:61,&quot;ProjectEntities_PrjProjectMainFk&quot;:null,&quot;ProjectEntity_PrjProjectMainFk&quot;:null,&quot;Project2BusinessPartnerEntities&quot;:null,&quot;SaleEntity&quot;:null,&quot;KeyfigureEntities&quot;:null,&quot;Project2basAddressEntities&quot;:null,&quot;Project2certificateEntities&quot;:null,&quot;ContentEntity&quot;:null,&quot;ContentTypeEntity&quot;:null,&quot;CostgroupCatEntities&quot;:null,&quot;Project2salestaxcodeEntities&quot;:null,&quot;SalesTaxMatrixEntities&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;SubsidiaryFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ContactFk&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}}}],&quot;CharacteristicDataToSave&quot;:[{&quot;Description&quot;:null,&quot;CharacteristicGroupFk&quot;:1000005,&quot;CharacteristicTypeFk&quot;:1,&quot;IsReadonly&quot;:false,&quot;IsComeBasics&quot;:null,&quot;Id&quot;:${ProjectId2},&quot;CharacteristicFk&quot;:1000011,&quot;CharacteristicSectionFk&quot;:1,&quot;ObjectFk&quot;:${ProjectId1},&quot;ObjectPKey1Fk&quot;:null,&quot;ObjectPKey2Fk&quot;:null,&quot;ObjectPKey3Fk&quot;:null,&quot;ValueBool&quot;:&quot;true&quot;,&quot;ValueNumber&quot;:null,&quot;ValueText&quot;:&quot;true&quot;,&quot;ValueDate&quot;:null,&quot;CharacteristicValueFk&quot;:null,&quot;InsertedAt&quot;:&quot;2022-08-05T05:16:31.6667577Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;CharacteristicEntity&quot;:{&quot;IsVisible&quot;:true,&quot;IsReadonly&quot;:false,&quot;IndexHeaderFk&quot;:0,&quot;Id&quot;:1000011,&quot;CharacteristicGroupFk&quot;:1000005,&quot;Code&quot;:&quot;TRUCK&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:&quot;Truck Char&quot;,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;CharacteristicTypeFk&quot;:1,&quot;DefaultValue&quot;:&quot;true&quot;,&quot;ValidFrom&quot;:null,&quot;ValidTo&quot;:null,&quot;Remark&quot;:null,&quot;InsertedAt&quot;:&quot;2022-07-04T12:35:10.49Z&quot;,&quot;InsertedBy&quot;:199,&quot;UpdatedAt&quot;:&quot;2022-07-04T12:36:07.05Z&quot;,&quot;UpdatedBy&quot;:199,&quot;Version&quot;:2,&quot;ChrctrstcChainEntities_CharacteristicFk&quot;:[],&quot;ChrctrstcChainEntities_ChainedCharacteristicFk&quot;:null,&quot;Chrctrstc2indexEntities&quot;:null},&quot;CharacteristicValueEntity&quot;:null}],&quot;ProjectId&quot;:${ProjectId1},&quot;EstLeadingStuctureContext&quot;:{},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.3_startbyevent" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;UUID&quot;:&quot;3819677C443E482789F928175775E59A&quot;,&quot;EntityId&quot;:${ProjectId1},&quot;Context&quot;:&quot;{\&quot;currentModuleName\&quot;:\&quot;project.main\&quot;}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/workflow/instance/startbyevent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.4_savelastObjects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ModuleName&quot;:&quot;project.main&quot;,&quot;Lastchanged&quot;:&quot;2022-08-05T05:16:41.195Z&quot;,&quot;Summary&quot;:&quot;${ProjectNo},DipPackage1&quot;,&quot;ObjectId&quot;:${ProjectId1}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/savelastObjects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PinnedProject" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.1_PinProject" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/lookupdata/masternew/getitembykey?lookup=project</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FromSchedulingTabClickOnNewRecord" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getdatalanguageinfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/getdatalanguageinfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/schedule/listmasterschedules?mainItemId=1000388" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/schedule/listmasterschedules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getexchangerates?projectId=1000388" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/estimate/main/currencyconversion/getexchangerates</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="project/main/ratebook/list" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;PKey1&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/ratebook/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/basics/layout/saveconfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;BasModuletabviewFk&quot;:1001691,&quot;Guid&quot;:&quot;61f2bf0ff02842f9961d4e2df6f2745c&quot;,&quot;Propertyconfig&quot;:&quot;{\&quot;fid\&quot;:\&quot;scheduling.calendar.calendardetailform\&quot;,\&quot;groups\&quot;:[{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;header\&quot;:\&quot;Basic Data\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityProperties\&quot;,\&quot;sortOrder\&quot;:1,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;header\&quot;:\&quot;Work Hours\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHours\&quot;,\&quot;sortOrder\&quot;:2,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;header\&quot;:\&quot;User-Defined Texts\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.UserdefTexts\&quot;,\&quot;sortOrder\&quot;:3,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;header\&quot;:\&quot;History\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityHistory\&quot;,\&quot;sortOrder\&quot;:4,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true}],\&quot;rows\&quot;:[{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;code\&quot;,\&quot;label\&quot;:\&quot;Code\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;Code\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:16,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;descriptioninfo\&quot;,\&quot;label\&quot;:\&quot;Description\&quot;,\&quot;type\&quot;:\&quot;translation\&quot;,\&quot;model\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;calendartypefk\&quot;,\&quot;label\&quot;:\&quot;Calendar Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CalendarTypeFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;basics.customize.calendartype\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.calendartype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.calendartype\&quot;,\&quot;filter\&quot;:{\&quot;showIcon\&quot;:true},\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:\&quot;platformStatusIconService\&quot;,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;9503bb9eb0db19b5ae3ec72f\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;isdefault\&quot;,\&quot;label\&quot;:\&quot;Is Default\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsDefault\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityIsDefault\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;workhourdefinesworkday\&quot;,\&quot;label\&quot;:\&quot;Workhours Defines Workdays\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;WorkHourDefinesWorkDay\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHourDefinesWorkDay\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomhourfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Hour\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomHourFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityBasUomHour\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:false,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-hour-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomdayfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Day\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomDayFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityBasUomDay\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:false,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-day-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;workhoursperday\&quot;,\&quot;label\&quot;:\&quot;Work Hours per Day\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;WorkHoursPerDay\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHoursPerDay\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;workhoursperweek\&quot;,\&quot;label\&quot;:\&quot;Work Hours per Week\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;WorkHoursPerWeek\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHoursPerWeek\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;workhourspermonth\&quot;,\&quot;label\&quot;:\&quot;Work Hours per Month\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;WorkHoursPerMonth\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHoursPerMonth\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;workhoursperyear\&quot;,\&quot;label\&quot;:\&quot;Work Hours per Year\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;WorkHoursPerYear\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.entityWorkHoursPerYear\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext01\&quot;,\&quot;label\&quot;:\&quot;Text 1\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText01\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext02\&quot;,\&quot;label\&quot;:\&quot;Text 2\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText02\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext03\&quot;,\&quot;label\&quot;:\&quot;Text 3\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText03\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext04\&quot;,\&quot;label\&quot;:\&quot;Text 4\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText04\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext05\&quot;,\&quot;label\&quot;:\&quot;Text 5\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText05\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;islive\&quot;,\&quot;label\&quot;:\&quot;Active\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsLive\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityIsLive\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomworkdayfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Work Day\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomWorkDayFk\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.uomWorkDay\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-work-day-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomweekfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Week\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomWeekFk\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.uomWeek\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-week-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuommonthfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Month\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomMonthFk\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.uomMonth\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-month-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomyearfk\&quot;,\&quot;label\&quot;:\&quot;UoM of Year\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomYearFk\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.uomYear\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-year-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;workHours\&quot;,\&quot;rid\&quot;:\&quot;basuomminutefk\&quot;,\&quot;label\&quot;:\&quot;UoM of Minute\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;BasUomMinuteFk\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.calendar.uomMinute\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitCalendarLookupDataService\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-calendar-unit-minute-filter\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4b258702c29911e99cb52a2ae2dbcce4\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;updated\&quot;,\&quot;label\&quot;:\&quot;Updated\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.updated\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUpdated\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;inserted\&quot;,\&quot;label\&quot;:\&quot;Inserted\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.inserted\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityInserted\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true}]}&quot;,&quot;Gridconfig&quot;:&quot;null&quot;,&quot;Viewdata&quot;:null,&quot;InsertedBy&quot;:208,&quot;UpdatedBy&quot;:null,&quot;InsertedAt&quot;:&quot;2022-07-20T10:38:54.57&quot;,&quot;UpdatedAt&quot;:null,&quot;Version&quot;:1,&quot;ModuletabviewEntity&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/saveconfig</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="schedule/create" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;PKey1&quot;:${ProjectId1},&quot;PKey2&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/schedule/create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ParentId1" enabled="true">
              <stringProp name="TestPlan.comments">1001129, 1001948</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ParentId1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:(.*?),&quot;Code&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="codeformat/list" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/customize/codeformat/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveSchedule" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa6-live.mtwo.international/itwo40/services/project/main/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:1,&quot;SchedulesToSave&quot;:[{&quot;MainItemId&quot;:${ParentId1},&quot;Schedules&quot;:{&quot;Project&quot;:null,&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;123&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:&quot;Dip12&quot;,&quot;VersionTr&quot;:0,&quot;Modified&quot;:true,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-08-02T00:00:00Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;colorInfo&quot;:{},&quot;readonly&quot;:[],&quot;errors&quot;:{&quot;Code&quot;:null}}}}],&quot;MainItemId&quot;:${ProjectId1},&quot;ProjectId&quot;:${ProjectId1},&quot;EstLeadingStuctureContext&quot;:{},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa6-live.mtwo.international/itwo40/services/cloud/common/savelastObjects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ModuleName&quot;:&quot;project.main&quot;,&quot;Lastchanged&quot;:&quot;2022-08-02T09:28:24.629Z&quot;,&quot;Summary&quot;:&quot;827,Dip1&quot;,&quot;ObjectId&quot;:${ProjectId1}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/savelastObjects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GoToScheduling" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/containerdefinition?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/containerdefinition</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="containerslist?internalModuleName=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="internalModuleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">internalModuleName</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/dependentdata/containerslist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/layout/module-config?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/module-config</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moduleName=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleName</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/gettabs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moduleconfig/load/?module=Scheduling.Main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">Scheduling.Main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/moduleconfig/load/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moduleSubModule=Scheduling.Main&amp;typeName=ActivityDto" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleSubModule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleSubModule</stringProp>
                  <stringProp name="Argument.value">Scheduling.Main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                  <stringProp name="Argument.value">ActivityDto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschema</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/platform/getschemas" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;TypeName&quot;:&quot;RequisitionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Resource.Requisition&quot;},{&quot;TypeName&quot;:&quot;ReservationDto&quot;,&quot;ModuleSubModule&quot;:&quot;Resource.Reservation&quot;},{&quot;TypeName&quot;:&quot;ActivityClerkDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;ActivityProgressReportDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;ActivityRelationshipDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;EventDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;BaselineDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;ActivityBaselineCmpVDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;LineItemProgressDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;HammockActivityDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;ActivityTemplateDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Template&quot;},{&quot;TypeName&quot;:&quot;RequisitionDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;},{&quot;TypeName&quot;:&quot;ActivityObservationDto&quot;,&quot;ModuleSubModule&quot;:&quot;Scheduling.Main&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/platform/getschemas</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/reporting/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="audittrailisactive?moduleName=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="moduleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleName</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/audittrail/audittrailisactive</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/listmodulenavcomconfig?internalName=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="internalName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">internalName</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/listmodulenavcomconfig</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="applicationGuid=63703EF25B6C43A68041283EDA7DDDAA" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">prefix</stringProp>
                  <stringProp name="Argument.value">Filter</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="moduleName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">moduleName</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="applicationGuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">applicationGuid</stringProp>
                  <stringProp name="Argument.value">63703EF25B6C43A68041283EDA7DDDAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="legacyPrefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">legacyPrefix</stringProp>
                  <stringProp name="Argument.value">AutoFilter</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/bulkExpr/profile/list</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="module=scheduling.main&amp;culture=en-us" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="culture" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">culture</stringProp>
                  <stringProp name="Argument.value">en-us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/docu/hasvideo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="conditionType=1&amp;fakeCreate=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="conditionType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">conditionType</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fakeCreate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fakeCreate</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/common/matrix/createCondition</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="listWizardsCompleteV?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/wizard/listWizardsCompleteV</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="main/activity/filtered" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;Pattern&quot;:null,&quot;PageSize&quot;:100,&quot;PageNumber&quot;:0,&quot;UseCurrentClient&quot;:null,&quot;IncludeNonActiveItems&quot;:false,&quot;ProjectContextId&quot;:${ProjectId1},&quot;PinningContext&quot;:[{&quot;token&quot;:&quot;project.main&quot;,&quot;id&quot;:${ProjectId1},&quot;info&quot;:&quot;827 - Dip1&quot;},{&quot;token&quot;:&quot;scheduling.main&quot;,&quot;id&quot;:${ParentId1},&quot;info&quot;:&quot;123 - Dip12&quot;}],&quot;ExecutionHints&quot;:false,&quot;isReadingDueToRefresh&quot;:false,&quot;furtherFilters&quot;:[{&quot;Token&quot;:&quot;INCLUDE_DUEDATE&quot;,&quot;Value&quot;:&quot;2022-08-02T09:28:41.137Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/filtered</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/list?modulename=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="modulename" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modulename</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/autofilter/list</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="activitytemplate/listall" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/template/activitytemplate/listall</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/layout/saveconfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;BasModuletabviewFk&quot;:1001796,&quot;Guid&quot;:&quot;0b1f0e40da664e4a8081fe8fa6111403&quot;,&quot;Propertyconfig&quot;:&quot;{\&quot;fid\&quot;:\&quot;scheduling.main.activitydetailform\&quot;,\&quot;groups\&quot;:[{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;header\&quot;:\&quot;Basic Data\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityProperties\&quot;,\&quot;sortOrder\&quot;:1,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;procurementGroup\&quot;,\&quot;header\&quot;:\&quot;Procurement\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.procurementGroup\&quot;,\&quot;sortOrder\&quot;:2,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;header\&quot;:\&quot;Location\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.locationGroup\&quot;,\&quot;sortOrder\&quot;:3,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;header\&quot;:\&quot;Dates and Floats\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.datesFloatsGroup\&quot;,\&quot;sortOrder\&quot;:4,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;constraintGroup\&quot;,\&quot;header\&quot;:\&quot;Constraint\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.constraintGroup\&quot;,\&quot;sortOrder\&quot;:5,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;header\&quot;:\&quot;Execution\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.ExecutionGroup\&quot;,\&quot;sortOrder\&quot;:6,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceGroup\&quot;,\&quot;header\&quot;:\&quot;Productivity\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.ProductivityGroup\&quot;,\&quot;sortOrder\&quot;:7,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;header\&quot;:\&quot;Performance\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.PerformanceMeasurementGroup\&quot;,\&quot;sortOrder\&quot;:8,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;progressGroup\&quot;,\&quot;header\&quot;:\&quot;Progress\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.ProgressGroup\&quot;,\&quot;sortOrder\&quot;:9,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;relation\&quot;,\&quot;header\&quot;:\&quot;Relation\&quot;,\&quot;header$tr$\&quot;:\&quot;scheduling.main.relation\&quot;,\&quot;sortOrder\&quot;:10,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;header\&quot;:\&quot;User-Defined Texts\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.UserdefTexts\&quot;,\&quot;sortOrder\&quot;:11,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;header\&quot;:\&quot;User-Defined Numbers\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.UserdefNumbers\&quot;,\&quot;sortOrder\&quot;:12,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;header\&quot;:\&quot;User-Defined Dates\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.UserdefDates\&quot;,\&quot;sortOrder\&quot;:13,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;header\&quot;:\&quot;History\&quot;,\&quot;header$tr$\&quot;:\&quot;cloud.common.entityHistory\&quot;,\&quot;sortOrder\&quot;:14,\&quot;isOpen\&quot;:true,\&quot;visible\&quot;:true,\&quot;showHeader\&quot;:true}],\&quot;rows\&quot;:[{\&quot;gid\&quot;:\&quot;procurementGroup\&quot;,\&quot;rid\&quot;:\&quot;packagecode\&quot;,\&quot;label\&quot;:\&quot;Package\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;PackageCode\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.packageCode\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;procurementGroup\&quot;,\&quot;rid\&quot;:\&quot;packagedesc\&quot;,\&quot;label\&quot;:\&quot;Package Desc.&apos;\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;PackageDesc\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:42,\&quot;label$tr$\&quot;:\&quot;scheduling.main.packageDesc\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;periodquantityperformance\&quot;,\&quot;label\&quot;:\&quot;Performance in Period Quantity\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;PeriodQuantityPerformance\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityPeriodQuantityPerformance\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;disallowNegative\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;duedatequantityperformance\&quot;,\&quot;label\&quot;:\&quot;Performance per Reporting Date Quantity\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;DueDateQuantityPerformance\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityDueDateQuantityPerformance\&quot;,\&quot;disallowNegative\&quot;:true,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;remainingactivitywork\&quot;,\&quot;label\&quot;:\&quot;Remaining Work\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;RemainingActivityWork\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityRemainingActivityWork\&quot;,\&quot;disallowNegative\&quot;:true,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;periodworkperformance\&quot;,\&quot;label\&quot;:\&quot;Performance in Period Work\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;PeriodWorkPerformance\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityPeriodWorkPerformance\&quot;,\&quot;disallowNegative\&quot;:true,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;duedateworkperformance\&quot;,\&quot;label\&quot;:\&quot;Performance per Reporting Date Work\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;DueDateWorkPerformance\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityDueDateWorkPerformance\&quot;,\&quot;disallowNegative\&quot;:true,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;remainingactivityquantity\&quot;,\&quot;label\&quot;:\&quot;Remaining Quantity\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;RemainingActivityQuantity\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityRemainingActivityQuantity\&quot;,\&quot;disallowNegative\&quot;:true,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceMeasurementGroup\&quot;,\&quot;rid\&quot;:\&quot;percentagecompletion\&quot;,\&quot;label\&quot;:\&quot;Measured Performance %\&quot;,\&quot;type\&quot;:\&quot;percent\&quot;,\&quot;model\&quot;:\&quot;PercentageCompletion\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityMeasuredPerformance\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;disallowNegative\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;plannedcalendardays\&quot;,\&quot;label\&quot;:\&quot;Planned Duration in Calendar Days\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;PlannedCalendarDays\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.plannedCalendarDays\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;actualcalendardays\&quot;,\&quot;label\&quot;:\&quot;Actual Duration in Calendar Days\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;ActualCalendarDays\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.actualCalendarDays\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;currentcalendardays\&quot;,\&quot;label\&quot;:\&quot;Current Duration in Calendar Days\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;CurrentCalendarDays\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.currentCalendarDays\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;relation\&quot;,\&quot;rid\&quot;:\&quot;predecessor\&quot;,\&quot;label\&quot;:\&quot;Predecessor\&quot;,\&quot;type\&quot;:\&quot;multicode\&quot;,\&quot;model\&quot;:\&quot;Predecessor\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.predecessor\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;relation\&quot;,\&quot;rid\&quot;:\&quot;successor\&quot;,\&quot;label\&quot;:\&quot;Successor\&quot;,\&quot;type\&quot;:\&quot;multicode\&quot;,\&quot;model\&quot;:\&quot;Successor\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.successor\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;schedulemasterfk\&quot;,\&quot;label\&quot;:\&quot;Master Schedule\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ScheduleMasterFk\&quot;,\&quot;sortOrder\&quot;:23,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.scheduleMasterFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:false,\&quot;lookupType\&quot;:\&quot;schedulingLookupScheduleDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;schedulingLookupScheduleDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;schedulingLookupScheduleDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;70b9f81e1a534dbd9d3e440f0c08f1e3\&quot;},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;activitymasterfk\&quot;,\&quot;label\&quot;:\&quot;Master Activity\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ActivityMasterFk\&quot;,\&quot;sortOrder\&quot;:24,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.activityMasterFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;schedulingLookupActivityDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;schedulingLookupActivityDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;schedulingLookupActivityDataService\&quot;,\&quot;filterKey\&quot;:\&quot;self-reference-type-activity-subschedules\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:{\&quot;moduleName\&quot;:\&quot;scheduling.main\&quot;},\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;Description\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;description\&quot;,\&quot;width\&quot;:300,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4f726ae7d8244ab189c82a301cb4bc08\&quot;,\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;ParentActivityFk\&quot;,\&quot;childProp\&quot;:\&quot;Activities\&quot;}},\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;ParentActivityFk\&quot;,\&quot;childProp\&quot;:\&quot;Activities\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectfk\&quot;,\&quot;label\&quot;:\&quot;Project\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;Schedule.Project.ProjectNo\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityProject\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:false,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;navigator\&quot;:{\&quot;moduleName\&quot;:\&quot;project.main\&quot;,\&quot;registerService\&quot;:\&quot;projectMainService\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;baselinefk\&quot;,\&quot;label\&quot;:\&quot;Baseline\&quot;,\&quot;type\&quot;:\&quot;description\&quot;,\&quot;model\&quot;:\&quot;Baseline\&quot;,\&quot;sortOrder\&quot;:18,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.baseline\&quot;,\&quot;formatter\&quot;:\&quot;description\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:false,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;code\&quot;,\&quot;label\&quot;:\&quot;Code\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;Code\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:16,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;description\&quot;,\&quot;label\&quot;:\&quot;Description\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;Description\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;parentactivityfk\&quot;,\&quot;label\&quot;:\&quot;Parent\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ParentActivityFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityParent\&quot;,\&quot;directive\&quot;:\&quot;scheduling-main-activity-parent-lookup\&quot;,\&quot;options\&quot;:{\&quot;readOnly\&quot;:true,\&quot;showClearButton\&quot;:false,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;schedulefk\&quot;,\&quot;label\&quot;:\&quot;Schedule\&quot;,\&quot;type\&quot;:\&quot;code\&quot;,\&quot;model\&quot;:\&quot;Schedule.Code\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.schedule\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:false,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;activitytemplatefk\&quot;,\&quot;label\&quot;:\&quot;Template\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ActivityTemplateFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityTemplate\&quot;,\&quot;directive\&quot;:\&quot;scheduling-activity-template-filter-lookup-dialog\&quot;,\&quot;options\&quot;:{\&quot;showClearButton\&quot;:true,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;controllingunitfk\&quot;,\&quot;label\&quot;:\&quot;Controlling Unit\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ControllingUnitFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.controllingunit\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;controllingunit\&quot;,\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;showClearButton\&quot;:true,\&quot;filterKey\&quot;:\&quot;scheduling-main-controllingunit-project-context-filter\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;directive\&quot;:\&quot;controlling-structure-dialog-lookup\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;calendarfk\&quot;,\&quot;label\&quot;:\&quot;Calendar\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;CalendarFk\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityCalCalendarFk\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;project-calendar-lookup\&quot;,\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false,\&quot;version\&quot;:3},\&quot;showClearButton\&quot;:false},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;specification\&quot;,\&quot;label\&quot;:\&quot;Specification\&quot;,\&quot;type\&quot;:\&quot;remark\&quot;,\&quot;model\&quot;:\&quot;Specification\&quot;,\&quot;sortOrder\&quot;:16,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:2000,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entitySpecification\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;activitystatefk\&quot;,\&quot;label\&quot;:\&quot;Status\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ActivityStateFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityState\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.activitystate\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.activitystate\&quot;,\&quot;filterKey\&quot;:\&quot;scheduling-main-status-by-rubric-category-filter\&quot;,\&quot;filter\&quot;:{\&quot;showIcon\&quot;:true,\&quot;filterKey\&quot;:\&quot;scheduling-main-status-by-rubric-category-filter\&quot;,\&quot;customIntegerProperty\&quot;:\&quot;BAS_RUBRIC_CATEGORY_FK\&quot;,\&quot;imageSelectorService\&quot;:\&quot;platformStatusIconService\&quot;},\&quot;showClearButton\&quot;:false,\&quot;imageSelector\&quot;:\&quot;platformStatusIconService\&quot;,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;d4add7eb7a15790f5252d2cf\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:false}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;schedulingmethodfk\&quot;,\&quot;label\&quot;:\&quot;Scheduling Method\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;SchedulingMethodFk\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.schedulingMethod\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.schedulemethod\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.schedulemethod\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;493f8b6132978d3fc7c6e3f8\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;projectreleasefk\&quot;,\&quot;label\&quot;:\&quot;Release\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ProjectReleaseFk\&quot;,\&quot;sortOrder\&quot;:20,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityRelease\&quot;,\&quot;doesDependOn\&quot;:\&quot;ProjectFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;ReleaseDate\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;CommentText\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;CommentText\&quot;,\&quot;field\&quot;:\&quot;CommentText\&quot;,\&quot;name\&quot;:\&quot;CommentText\&quot;,\&quot;formatter\&quot;:\&quot;comment\&quot;,\&quot;width\&quot;:180,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityComment\&quot;},{\&quot;id\&quot;:\&quot;ReleaseDate\&quot;,\&quot;field\&quot;:\&quot;ReleaseDate\&quot;,\&quot;name\&quot;:\&quot;Date\&quot;,\&quot;formatter\&quot;:\&quot;dateutc\&quot;,\&quot;width\&quot;:150,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDate\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;993406e2d5134f43aa6849486d661660\&quot;},\&quot;showClearButton\&quot;:true},\&quot;editor\&quot;:\&quot;lookup\&quot;,\&quot;editorOptions\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;lookupType\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;lookupOptions\&quot;:{\&quot;filterKey\&quot;:null,\&quot;lookupType\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;CommentText\&quot;,\&quot;additionalColumns\&quot;:true,\&quot;lookupModuleQualifier\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;showClearButton\&quot;:true,\&quot;disableDataCaching\&quot;:true,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;CommentText\&quot;,\&quot;field\&quot;:\&quot;CommentText\&quot;,\&quot;name\&quot;:\&quot;CommentText\&quot;,\&quot;formatter\&quot;:\&quot;comment\&quot;,\&quot;width\&quot;:180,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityComment\&quot;},{\&quot;id\&quot;:\&quot;ReleaseDate\&quot;,\&quot;field\&quot;:\&quot;ReleaseDate\&quot;,\&quot;name\&quot;:\&quot;Date\&quot;,\&quot;formatter\&quot;:\&quot;dateutc\&quot;,\&quot;width\&quot;:150,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDate\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;993406e2d5134f43aa6849486d661660\&quot;},\&quot;showClearButton\&quot;:true},\&quot;formatter\&quot;:\&quot;lookup\&quot;,\&quot;formatterOptions\&quot;:{\&quot;lookupType\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectReleaseLookupDataService\&quot;,\&quot;displayMember\&quot;:\&quot;CommentText\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;isClientSearch\&quot;:true,\&quot;translate\&quot;:false,\&quot;imageSelector\&quot;:\&quot;\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;locationfk\&quot;,\&quot;label\&quot;:\&quot;Location\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;LocationFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.location\&quot;,\&quot;doesDependOn\&quot;:\&quot;ProjectFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;70b9f81e1a534dbd9d3e440f0c08f1e3\&quot;,\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;LocationParentFk\&quot;,\&quot;childProp\&quot;:\&quot;Locations\&quot;}},\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;LocationParentFk\&quot;,\&quot;childProp\&quot;:\&quot;Locations\&quot;},\&quot;showClearButton\&quot;:true},\&quot;editor\&quot;:\&quot;lookup\&quot;,\&quot;editorOptions\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;lookupType\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;lookupOptions\&quot;:{\&quot;filterKey\&quot;:null,\&quot;lookupType\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;additionalColumns\&quot;:true,\&quot;lookupModuleQualifier\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;showClearButton\&quot;:true,\&quot;disableDataCaching\&quot;:true,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;70b9f81e1a534dbd9d3e440f0c08f1e3\&quot;,\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;LocationParentFk\&quot;,\&quot;childProp\&quot;:\&quot;Locations\&quot;},\&quot;pinningContextFilter\&quot;:[\&quot;project.main\&quot;]},\&quot;showClearButton\&quot;:true},\&quot;formatter\&quot;:\&quot;lookup\&quot;,\&quot;formatterOptions\&quot;:{\&quot;lookupType\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectLocationLookupDataService\&quot;,\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;isClientSearch\&quot;:true,\&quot;translate\&quot;:false,\&quot;imageSelector\&quot;:\&quot;\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;locationspecification\&quot;,\&quot;label\&quot;:\&quot;Location Specification\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;LocationSpecification\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;scheduling.main.locationSpecification\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;activitypresentationfk\&quot;,\&quot;label\&quot;:\&quot;Activity Presented\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ActivityPresentationFk\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.activityPresented\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.activitypresentation\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.activitypresentation\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;6f69ee0e885821638423a99a\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;chartpresentationfk\&quot;,\&quot;label\&quot;:\&quot;Chart Presented\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ChartPresentationFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.activityChartPresented\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.chartpresentation\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.chartpresentation\&quot;,\&quot;filter\&quot;:{\&quot;customIntegerProperty\&quot;:\&quot;COLOR\&quot;,\&quot;field\&quot;:\&quot;Color\&quot;},\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;e608e8c4f8d7b55ac153081c\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;plannedstart\&quot;,\&quot;label\&quot;:\&quot;Planned Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;PlannedStart\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.plannedStart\&quot;,\&quot;editor\&quot;:\&quot;dateutc\&quot;,\&quot;formatter\&quot;:\&quot;dateutc\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;plannedfinish\&quot;,\&quot;label\&quot;:\&quot;Planned Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;PlannedFinish\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.plannedFinish\&quot;,\&quot;editor\&quot;:\&quot;dateutc\&quot;,\&quot;formatter\&quot;:\&quot;dateutc\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;constraintGroup\&quot;,\&quot;rid\&quot;:\&quot;constrainttypefk\&quot;,\&quot;label\&quot;:\&quot;Constraint\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ConstraintTypeFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.constraint\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.constrainttype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.constrainttype\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;baf6fd97072a0ef7a0f36cb0\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;constraintGroup\&quot;,\&quot;rid\&quot;:\&quot;constraintdate\&quot;,\&quot;label\&quot;:\&quot;Date\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;ConstraintDate\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityDate\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;actualstart\&quot;,\&quot;label\&quot;:\&quot;Actual Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;ActualStart\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.actualStart\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;actualfinish\&quot;,\&quot;label\&quot;:\&quot;Actual Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;ActualFinish\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.actualFinish\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;executionstarted\&quot;,\&quot;label\&quot;:\&quot;Started\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;ExecutionStarted\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.executionStarted\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;actualduration\&quot;,\&quot;label\&quot;:\&quot;Actual Duration\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;ActualDuration\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.actualDuration\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;currentstart\&quot;,\&quot;label\&quot;:\&quot;Current Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;CurrentStart\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.currentStart\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;currentfinish\&quot;,\&quot;label\&quot;:\&quot;Current Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;CurrentFinish\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.currentFinish\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;currentduration\&quot;,\&quot;label\&quot;:\&quot;Current Duration\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;CurrentDuration\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.currentDuration\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;execGroup\&quot;,\&quot;rid\&quot;:\&quot;executionfinished\&quot;,\&quot;label\&quot;:\&quot;Finished\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;ExecutionFinished\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.executionFinished\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;plannedduration\&quot;,\&quot;label\&quot;:\&quot;Planned Duration\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;PlannedDuration\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.plannedDuration\&quot;,\&quot;bulkSupport\&quot;:true,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;earlieststart\&quot;,\&quot;label\&quot;:\&quot;Earliest Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;EarliestStart\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.earliestStart\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;lateststart\&quot;,\&quot;label\&quot;:\&quot;Latest Start\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;LatestStart\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.latestStart\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;earliestfinish\&quot;,\&quot;label\&quot;:\&quot;Earliest Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;EarliestFinish\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.earliestFinish\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;latestfinish\&quot;,\&quot;label\&quot;:\&quot;Latest Finish\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;LatestFinish\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.latestFinish\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;totalfloattime\&quot;,\&quot;label\&quot;:\&quot;Total Float\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;TotalFloatTime\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.totalFloatTime\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;freefloattime\&quot;,\&quot;label\&quot;:\&quot;Free Float\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;FreeFloatTime\&quot;,\&quot;sortOrder\&quot;:12,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.freeFloatTime\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceGroup\&quot;,\&quot;rid\&quot;:\&quot;resourcefactor\&quot;,\&quot;label\&quot;:\&quot;Resource/Crew\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;ResourceFactor\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.resourceFactor\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceGroup\&quot;,\&quot;rid\&quot;:\&quot;performancefactor\&quot;,\&quot;label\&quot;:\&quot;Productivity\&quot;,\&quot;type\&quot;:\&quot;factor\&quot;,\&quot;model\&quot;:\&quot;PerformanceFactor\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.performanceFactor\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceGroup\&quot;,\&quot;rid\&quot;:\&quot;perf1uomfk\&quot;,\&quot;label\&quot;:\&quot;UoM 1\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;Perf1UoMFk\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.perfUoM\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;number\&quot;:\&quot;1\&quot;},\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;01faa125dc93475d80a5407dd67e0ed7\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;performanceGroup\&quot;,\&quot;rid\&quot;:\&quot;perf2uomfk\&quot;,\&quot;label\&quot;:\&quot;UoM 2\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;Perf2UoMFk\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.perfUoM\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;number\&quot;:\&quot;2\&quot;},\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;01faa125dc93475d80a5407dd67e0ed7\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;tasktypefk\&quot;,\&quot;label\&quot;:\&quot;Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;TaskTypeFk\&quot;,\&quot;sortOrder\&quot;:12,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityType\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.tasktype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.tasktype\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;37295cb4e91375968dbfedb8\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;progressGroup\&quot;,\&quot;rid\&quot;:\&quot;work\&quot;,\&quot;label\&quot;:\&quot;Work\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;Work\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.work\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;quantityuomfk\&quot;,\&quot;label\&quot;:\&quot;UoM\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;QuantityUoMFk\&quot;,\&quot;sortOrder\&quot;:14,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUoM\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;UnitInfo.Translated\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basicsUnitLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Unit\&quot;,\&quot;field\&quot;:\&quot;UnitInfo\&quot;,\&quot;name\&quot;:\&quot;Unit\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;basics.unit.entityUnit\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;01faa125dc93475d80a5407dd67e0ed7\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;quantity\&quot;,\&quot;label\&quot;:\&quot;Quantity\&quot;,\&quot;type\&quot;:\&quot;quantity\&quot;,\&quot;model\&quot;:\&quot;Quantity\&quot;,\&quot;sortOrder\&quot;:13,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityQuantity\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;progressGroup\&quot;,\&quot;rid\&quot;:\&quot;progressreportmethodfk\&quot;,\&quot;label\&quot;:\&quot;Report Method\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ProgressReportMethodFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.progressReportMethod\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.progressreportmethod\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.progressreportmethod\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;60ec9f8ab020ce0334875ec1\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;bas3dvisualizationtypefk\&quot;,\&quot;label\&quot;:\&quot;3D Visualization Type\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;Bas3dVisualizationTypeFk\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.3dVisualizationType\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.threedvisualizationtype\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.threedvisualizationtype\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;0485ac1ba45eddb525c93842\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;loblabelplacementfk\&quot;,\&quot;label\&quot;:\&quot;Label Placement\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;LobLabelPlacementFk\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityLabelPlacement\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.labelplacement\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.labelplacement\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;a349628ef21d2eb442a44d32\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;scurvefk\&quot;,\&quot;label\&quot;:\&quot;S Curve\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;SCurveFk\&quot;,\&quot;sortOrder\&quot;:19,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.activitySCurve\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-simple\&quot;,\&quot;options\&quot;:{\&quot;lookupType\&quot;:\&quot;basics.customize.scurve\&quot;,\&quot;eagerLoad\&quot;:true,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;displayMember\&quot;:\&quot;Description\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;basics.customize.scurve\&quot;,\&quot;filterKey\&quot;:null,\&quot;showClearButton\&quot;:true,\&quot;imageSelector\&quot;:null,\&quot;events\&quot;:null,\&quot;uuid\&quot;:\&quot;5fdce24e33a286213d952040\&quot;,\&quot;lookupOptions\&quot;:{\&quot;showClearButton\&quot;:true}},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;procurementGroup\&quot;,\&quot;rid\&quot;:\&quot;prcstructurefk\&quot;,\&quot;label\&quot;:\&quot;Procurement structure\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;PrcStructureFk\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.prcStructureFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-procurementstructure-structure-dialog\&quot;,\&quot;descriptionField\&quot;:\&quot;StructureDescription\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;initValueField\&quot;:\&quot;StructureCode\&quot;,\&quot;showClearButton\&quot;:true},\&quot;showClearButton\&quot;:true},\&quot;navigator\&quot;:{\&quot;moduleName\&quot;:\&quot;basics.procurementstructure\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;iscritical\&quot;,\&quot;label\&quot;:\&quot;Critical\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsCritical\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.iscritical\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;isonlongestpath\&quot;,\&quot;label\&quot;:\&quot;On Longest Path\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsOnLongestPath\&quot;,\&quot;sortOrder\&quot;:13,\&quot;readonly\&quot;:true,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.entityIsOnLongestPath\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;isquantityevaluated\&quot;,\&quot;label\&quot;:\&quot;Quantity Evaluated\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;model\&quot;:\&quot;IsQuantityEvaluated\&quot;,\&quot;sortOrder\&quot;:15,\&quot;readonly\&quot;:false,\&quot;required\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.isQuantityEvaluated\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;note\&quot;,\&quot;label\&quot;:\&quot;Note\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;Note\&quot;,\&quot;sortOrder\&quot;:17,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;scheduling.main.note\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext01\&quot;,\&quot;label\&quot;:\&quot;Text 1\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText01\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext02\&quot;,\&quot;label\&quot;:\&quot;Text 2\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText02\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext03\&quot;,\&quot;label\&quot;:\&quot;Text 3\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText03\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext04\&quot;,\&quot;label\&quot;:\&quot;Text 4\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText04\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext05\&quot;,\&quot;label\&quot;:\&quot;Text 5\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText05\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext06\&quot;,\&quot;label\&quot;:\&quot;Text 6\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText06\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext07\&quot;,\&quot;label\&quot;:\&quot;Text 7\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText07\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext08\&quot;,\&quot;label\&quot;:\&quot;Text 8\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText08\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext09\&quot;,\&quot;label\&quot;:\&quot;Text 9\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText09\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefTextGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinedtext10\&quot;,\&quot;label\&quot;:\&quot;Text 10\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;UserDefinedText10\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber01\&quot;,\&quot;label\&quot;:\&quot;Number 1\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber01\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber02\&quot;,\&quot;label\&quot;:\&quot;Number 2\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber02\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber03\&quot;,\&quot;label\&quot;:\&quot;Number 3\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber03\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber04\&quot;,\&quot;label\&quot;:\&quot;Number 4\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber04\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber05\&quot;,\&quot;label\&quot;:\&quot;Number 5\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber05\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber06\&quot;,\&quot;label\&quot;:\&quot;Number 6\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber06\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber07\&quot;,\&quot;label\&quot;:\&quot;Number 7\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber07\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber08\&quot;,\&quot;label\&quot;:\&quot;Number 8\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber08\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber09\&quot;,\&quot;label\&quot;:\&quot;Number 9\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber09\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefNumberGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefinednumber10\&quot;,\&quot;label\&quot;:\&quot;Number 10\&quot;,\&quot;type\&quot;:\&quot;money\&quot;,\&quot;model\&quot;:\&quot;UserDefinedNumber10\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate01\&quot;,\&quot;label\&quot;:\&quot;Date 1\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate01\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate02\&quot;,\&quot;label\&quot;:\&quot;Date 2\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate02\&quot;,\&quot;sortOrder\&quot;:3,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate03\&quot;,\&quot;label\&quot;:\&quot;Date 3\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate03\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate04\&quot;,\&quot;label\&quot;:\&quot;Date 4\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate04\&quot;,\&quot;sortOrder\&quot;:5,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate05\&quot;,\&quot;label\&quot;:\&quot;Date 5\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate05\&quot;,\&quot;sortOrder\&quot;:6,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate06\&quot;,\&quot;label\&quot;:\&quot;Date 6\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate06\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate07\&quot;,\&quot;label\&quot;:\&quot;Date 7\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate07\&quot;,\&quot;sortOrder\&quot;:8,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate08\&quot;,\&quot;label\&quot;:\&quot;Date 8\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate08\&quot;,\&quot;sortOrder\&quot;:9,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate09\&quot;,\&quot;label\&quot;:\&quot;Date 9\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate09\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;userDefDateGroup\&quot;,\&quot;rid\&quot;:\&quot;userdefineddate10\&quot;,\&quot;label\&quot;:\&quot;Date 10\&quot;,\&quot;type\&quot;:\&quot;dateutc\&quot;,\&quot;model\&quot;:\&quot;UserDefinedDate10\&quot;,\&quot;sortOrder\&quot;:11,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;label$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;locationGroup\&quot;,\&quot;rid\&quot;:\&quot;cosmatchtext\&quot;,\&quot;label\&quot;:\&quot;COS Match Text\&quot;,\&quot;type\&quot;:\&quot;comment\&quot;,\&quot;model\&quot;:\&quot;CosMatchtext\&quot;,\&quot;sortOrder\&quot;:7,\&quot;readonly\&quot;:true,\&quot;maxLength\&quot;:255,\&quot;label$tr$\&quot;:\&quot;scheduling.main.CosMatchText\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;schedulesubfk\&quot;,\&quot;label\&quot;:\&quot;Sub Schedule\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ScheduleSubFk\&quot;,\&quot;sortOrder\&quot;:21,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.scheduleSubFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;DescriptionInfo.Translated\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;schedulingLookupSubScheduleDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;schedulingLookupSubScheduleDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;schedulingLookupSubScheduleDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;DescriptionInfo\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;translation\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;70b9f81e1a534dbd9d3e440f0c08f1e3\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;activitysubfk\&quot;,\&quot;label\&quot;:\&quot;Sub Activity\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;ActivitySubFk\&quot;,\&quot;sortOrder\&quot;:22,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.activitySubFk\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;Code\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;schedulingLookupSumActivityDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;schedulingLookupSumActivityDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;schedulingLookupSumActivityDataService\&quot;,\&quot;filterKey\&quot;:\&quot;self-reference-activity-exclude-activity\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:{\&quot;moduleName\&quot;:\&quot;scheduling.main\&quot;},\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Code\&quot;,\&quot;field\&quot;:\&quot;Code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;formatter\&quot;:\&quot;code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;},{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;Description\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;description\&quot;,\&quot;width\&quot;:300,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false,\&quot;uuid\&quot;:\&quot;4f726ae7d8244ab189c82a301cb4bc08\&quot;,\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;ParentActivityFk\&quot;,\&quot;childProp\&quot;:\&quot;Activities\&quot;}},\&quot;treeOptions\&quot;:{\&quot;parentProp\&quot;:\&quot;ParentActivityFk\&quot;,\&quot;childProp\&quot;:\&quot;Activities\&quot;},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;baseGroup\&quot;,\&quot;rid\&quot;:\&quot;addressfk\&quot;,\&quot;label\&quot;:\&quot;Shipping Address\&quot;,\&quot;type\&quot;:\&quot;directive\&quot;,\&quot;model\&quot;:\&quot;AddressFk\&quot;,\&quot;sortOrder\&quot;:10,\&quot;readonly\&quot;:false,\&quot;label$tr$\&quot;:\&quot;scheduling.main.address\&quot;,\&quot;directive\&quot;:\&quot;basics-lookupdata-lookup-composite\&quot;,\&quot;options\&quot;:{\&quot;lookupDirective\&quot;:\&quot;basics-lookup-data-by-custom-data-service\&quot;,\&quot;descriptionMember\&quot;:\&quot;Description\&quot;,\&quot;lookupOptions\&quot;:{\&quot;displayMember\&quot;:\&quot;AddressEntity.AddressLine\&quot;,\&quot;valueMember\&quot;:\&quot;Id\&quot;,\&quot;showClearButton\&quot;:true,\&quot;lookupType\&quot;:\&quot;projectAddressesDescLookupDataService\&quot;,\&quot;dataServiceName\&quot;:\&quot;projectAddressesDescLookupDataService\&quot;,\&quot;lookupModuleQualifier\&quot;:\&quot;projectAddressesDescLookupDataService\&quot;,\&quot;disableDataCaching\&quot;:true,\&quot;navigator\&quot;:false,\&quot;enableCache\&quot;:false,\&quot;columns\&quot;:[{\&quot;id\&quot;:\&quot;Description\&quot;,\&quot;field\&quot;:\&quot;Description\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;formatter\&quot;:\&quot;description\&quot;,\&quot;width\&quot;:300,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;},{\&quot;id\&quot;:\&quot;AddressEntity.AddressLine\&quot;,\&quot;field\&quot;:\&quot;AddressEntity.AddressLine\&quot;,\&quot;name\&quot;:\&quot;AddressLine\&quot;,\&quot;formatter\&quot;:\&quot;remark\&quot;,\&quot;width\&quot;:300,\&quot;name$tr$\&quot;:\&quot;cloud.common.address\&quot;}],\&quot;isClientSearch\&quot;:true,\&quot;isTextEditable\&quot;:false},\&quot;showClearButton\&quot;:true},\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;dateFloatGroup\&quot;,\&quot;rid\&quot;:\&quot;remainingduration\&quot;,\&quot;label\&quot;:\&quot;Remaining Duration\&quot;,\&quot;type\&quot;:\&quot;integer\&quot;,\&quot;model\&quot;:\&quot;RemainingDuration\&quot;,\&quot;sortOrder\&quot;:4,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;scheduling.main.remainingduration\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;updated\&quot;,\&quot;label\&quot;:\&quot;Updated\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.updated\&quot;,\&quot;sortOrder\&quot;:2,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityUpdated\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true},{\&quot;gid\&quot;:\&quot;entityHistory\&quot;,\&quot;rid\&quot;:\&quot;inserted\&quot;,\&quot;label\&quot;:\&quot;Inserted\&quot;,\&quot;type\&quot;:\&quot;history\&quot;,\&quot;model\&quot;:\&quot;__rt$data.history.inserted\&quot;,\&quot;sortOrder\&quot;:1,\&quot;readonly\&quot;:true,\&quot;label$tr$\&quot;:\&quot;cloud.common.entityInserted\&quot;,\&quot;enterStop\&quot;:true,\&quot;tabStop\&quot;:true,\&quot;visible\&quot;:true}]}&quot;,&quot;Gridconfig&quot;:&quot;null&quot;,&quot;Viewdata&quot;:null,&quot;InsertedBy&quot;:208,&quot;UpdatedBy&quot;:null,&quot;InsertedAt&quot;:&quot;2022-08-01T08:53:51.227&quot;,&quot;UpdatedAt&quot;:null,&quot;Version&quot;:1,&quot;ModuletabviewEntity&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/saveconfig</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGenWizConfigByIds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[700,700,701,701,702,702,703,703]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/genwizard/instance/getGenWizConfigByIds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="listbyschedule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:[${ParentId1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/baseline/listbyschedule</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/schedule/timeline/list?mainItemID=1001129" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemID</stringProp>
                  <stringProp name="Argument.value">${ParentId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/schedule/timeline/list</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/getusertransientrootenable" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/getusertransientrootenable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Client-Context" elementType="Header">
                  <stringProp name="Header.name">Client-Context</stringProp>
                  <stringProp name="Header.value">{&quot;dataLanguageId&quot;:1,&quot;language&quot;:&quot;en-us&quot;,&quot;culture&quot;:&quot;en-us&quot;,&quot;secureClientRole&quot;:&quot;${SecureClientRole}&quot;}</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreateA&amp;SaveActivityStructure" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/activity/create" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;parent&quot;:{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:32,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:32,&quot;Predecessor&quot;:null,&quot;Successor&quot;:null,&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:-1,&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:-1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;ROOT&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:null,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:0,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:null,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:null,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;ConstraintTypeFk&quot;:null,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:32,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:32,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:null,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:null,&quot;ProgressReportMethodFk&quot;:null,&quot;Bas3dVisualizationTypeFk&quot;:null,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:29.386Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true}],&quot;entityReadonly&quot;:true,&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-root-scheduling&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:0,&quot;collapsed&quot;:true,&quot;lastElement&quot;:true,&quot;children&quot;:false},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;},&quot;parentId&quot;:-1,&quot;scheduleId&quot;:${ParentId1},&quot;projectId&quot;:${ProjectId1},&quot;lastCode&quot;:&quot;ROOT&quot;,&quot;insertActivity&quot;:false,&quot;newHierarchy&quot;:true,&quot;selectedActivity&quot;:{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:32,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:32,&quot;Predecessor&quot;:null,&quot;Successor&quot;:null,&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:-1,&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:-1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;ROOT&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:null,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:0,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:null,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:null,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;ConstraintTypeFk&quot;:null,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:32,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:32,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:null,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:null,&quot;ProgressReportMethodFk&quot;:null,&quot;Bas3dVisualizationTypeFk&quot;:null,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:29.386Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true}],&quot;entityReadonly&quot;:true,&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-root-scheduling&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:0,&quot;collapsed&quot;:true,&quot;lastElement&quot;:true,&quot;children&quot;:false},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SchedulingId1" enabled="true">
              <stringProp name="TestPlan.comments">1014269</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SchedulingId1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;IsReadOnly&quot;:false,&quot;Id&quot;:(.*?),&quot;ProjectFk&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/defaultlist?sectionId=12&amp;mainItemId=1014269" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${SchedulingId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/validate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;MainItemId&quot;:${SchedulingId1},&quot;Activities&quot;:[{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:-1,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1.999988425925926,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1.999988425925926,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId1},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;10&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59.999Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:1,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:31:28.381Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:null,&quot;inserted&quot;:null,&quot;insertedBy&quot;:{},&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:{}},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionFinished&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionStarted&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualStart&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualFinish&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:false}},{&quot;HasChildren&quot;:true,&quot;Activities&quot;:[{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:-1,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1.999988425925926,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1.999988425925926,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId1},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;10&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59.999Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:1,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:31:28.381Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:null,&quot;inserted&quot;:null,&quot;insertedBy&quot;:{},&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:{}},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionFinished&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionStarted&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualStart&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualFinish&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:false}}],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:32,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:32,&quot;Predecessor&quot;:null,&quot;Successor&quot;:null,&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:-1,&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:-1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;ROOT&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:null,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:0,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:null,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:null,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;ConstraintTypeFk&quot;:null,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-08-05T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-09-05T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:32,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:32,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:null,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:null,&quot;ProgressReportMethodFk&quot;:null,&quot;Bas3dVisualizationTypeFk&quot;:null,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:29.386Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true}],&quot;entityReadonly&quot;:true,&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-root-scheduling&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:0,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:1},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;}],&quot;Activity&quot;:{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:-1,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1.999988425925926,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1.999988425925926,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId1},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;10&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59.999Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59.000Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:1,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T05:31:28.381Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:null,&quot;inserted&quot;:null,&quot;insertedBy&quot;:{},&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:{}},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionFinished&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionStarted&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualStart&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualFinish&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:false}},&quot;ActivityPlanningChange&quot;:{&quot;Id&quot;:${SchedulingId1},&quot;StartDate&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;EndDate&quot;:&quot;2022-10-04T23:59:59.999Z&quot;,&quot;ChangedField&quot;:&quot;MakeParentSummary&quot;,&quot;CalculationNeeded&quot;:true},&quot;HasTransientRootEntityInclude&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/validate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/reporting/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="istWizardsCompleteV?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/wizard/listWizardsCompleteV</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/unit/freetypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/unit/freetypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/getGenWizConfigByIds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[700,700,701,701,702,702,703,703]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/genwizard/instance/getGenWizConfigByIds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/activity/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:2,&quot;MainItemId&quot;:${SchedulingId1},&quot;Activities&quot;:[{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:-1,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1.999988425925926,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId1},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;10&quot;,&quot;Description&quot;:&quot;Dip1&quot;,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:77,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:0,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;&quot;,&quot;inserted&quot;:&quot;&quot;,&quot;insertedBy&quot;:&quot;&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionFinished&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ExecutionStarted&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualStart&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActualFinish&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:true,&quot;lastElement&quot;:false,&quot;children&quot;:false},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;},{&quot;HasChildren&quot;:true,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:null,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:null,&quot;PercentageCompletion&quot;:null,&quot;PercentageRemaining&quot;:null,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1.999988425925926,&quot;Predecessor&quot;:null,&quot;Successor&quot;:null,&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:-1,&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:-1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;ROOT&quot;,&quot;Description&quot;:null,&quot;ParentActivityFk&quot;:null,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:0,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:null,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:null,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;ConstraintTypeFk&quot;:null,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:null,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:null,&quot;ProgressReportMethodFk&quot;:null,&quot;Bas3dVisualizationTypeFk&quot;:null,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:null,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;InsertedBy&quot;:0,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:null,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:null,&quot;inserted&quot;:null,&quot;insertedBy&quot;:{},&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:{}},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true}],&quot;entityReadonly&quot;:true,&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-root-scheduling&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:0,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:1},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;}],&quot;ActivityPlanningChange&quot;:{&quot;StartDate&quot;:&quot;2022-10-04T00:00:00.000Z&quot;,&quot;EndDate&quot;:&quot;2022-10-04T23:59:59.999Z&quot;,&quot;Id&quot;:${SchedulingId1},&quot;ChangedField&quot;:&quot;MakeParentSummary&quot;,&quot;CalculationNeeded&quot;:true},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="main/activity/execute" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Action&quot;:13,&quot;EffectedItemId&quot;:${SchedulingId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/execute</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SchedulingId2" enabled="true">
              <stringProp name="TestPlan.comments">1014270</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SchedulingId2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;IsReadOnly&quot;:false,&quot;Id&quot;:(.*?),&quot;ProjectFk&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="defaultlist?sectionId=12&amp;mainItemId=1014270" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${SchedulingId2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/reporting/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/listWizardsCompleteV?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/wizard/listWizardsCompleteV</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/unit/freetypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/unit/freetypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/getGenWizConfigByIds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[700,700,701,701,702,702,703,703]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/genwizard/instance/getGenWizConfigByIds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:1,&quot;MainItemId&quot;:${SchedulingId2},&quot;Activities&quot;:[{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:0,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:77,&quot;PercentageCompletion&quot;:0,&quot;PercentageRemaining&quot;:100,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId2},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;20&quot;,&quot;Description&quot;:&quot;Dip1&quot;,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:77,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:&quot;4636110Dip1Activity&quot;,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:1,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;04/10/2022 | 11:01:50&quot;,&quot;inserted&quot;:&quot;04/10/2022 | 11:01:50 (admin12)&quot;,&quot;insertedBy&quot;:&quot;admin12&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:false},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;}],&quot;ActivityPlanningChange&quot;:{&quot;DueDate&quot;:&quot;2022-10-04T05:05:24.982Z&quot;},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cloud/common/savelastObjects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ModuleName&quot;:&quot;scheduling.main&quot;,&quot;Lastchanged&quot;:&quot;2022-10-04T05:31:54.166Z&quot;,&quot;Summary&quot;:&quot;20,Dip1&quot;,&quot;ObjectId&quot;:${SchedulingId2}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/savelastObjects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/activity/execute" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Action&quot;:13,&quot;EffectedItemId&quot;:${SchedulingId2}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/execute</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SchedulingId3" enabled="true">
              <stringProp name="TestPlan.comments">1014271</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SchedulingId3</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;IsReadOnly&quot;:false,&quot;Id&quot;:(.*?),&quot;ProjectFk&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sectionId=12&amp;mainItemId=1014271" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mainItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mainItemId</stringProp>
                  <stringProp name="Argument.value">${SchedulingId3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sectionId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sectionId</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/characteristic/data/defaultlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/reporting/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/load?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/sidebar/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/listWizardsCompleteV?module=scheduling.main" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">module</stringProp>
                  <stringProp name="Argument.value">scheduling.main</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/wizard/listWizardsCompleteV</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/unit/freetypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/unit/freetypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="instance/getGenWizConfigByIds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[700,700,701,701,702,702,703,703]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/config/genwizard/instance/getGenWizConfigByIds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:1,&quot;MainItemId&quot;:${SchedulingId3},&quot;Activities&quot;:[{&quot;HasChildren&quot;:false,&quot;Activities&quot;:[],&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;Schedule&quot;:{&quot;Project&quot;:{&quot;Id&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ProjectNo&quot;:&quot;46361&quot;,&quot;ProjectName&quot;:&quot;DipPackage1&quot;,&quot;ProjectName2&quot;:&quot;&quot;,&quot;CurrencyFk&quot;:1,&quot;BusinessPartnerFk&quot;:null,&quot;IsLive&quot;:true,&quot;Userdefined1&quot;:null,&quot;Userdefined2&quot;:null},&quot;IsBold&quot;:false,&quot;IsMarked&quot;:false,&quot;PermissionObjectInfo&quot;:&quot;&quot;,&quot;RubricCategoryFk&quot;:298,&quot;Id&quot;:${ParentId1},&quot;Code&quot;:&quot;345&quot;,&quot;DescriptionInfo&quot;:{&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;DescriptionModified&quot;:false,&quot;Translated&quot;:null,&quot;VersionTr&quot;:0,&quot;Modified&quot;:false,&quot;OtherLanguages&quot;:null},&quot;ScheduleMasterFk&quot;:null,&quot;Remark&quot;:null,&quot;CommentText&quot;:null,&quot;ProjectFk&quot;:${ProjectId1},&quot;CompanyFk&quot;:1000005,&quot;ScheduleTypeFk&quot;:3,&quot;ScheduleStatusFk&quot;:1,&quot;TargetStart&quot;:null,&quot;TargetEnd&quot;:null,&quot;PerformanceSheetFk&quot;:null,&quot;ProgressReportingMethod&quot;:null,&quot;CalendarFk&quot;:1,&quot;IsLocationMandatory&quot;:false,&quot;CodeFormatFk&quot;:3,&quot;IsLive&quot;:true,&quot;IsFinishedWith100Percent&quot;:true,&quot;UseCalendarForLagtime&quot;:false,&quot;InitWithTargetStart&quot;:false,&quot;ScheduleChartIntervalFk&quot;:1,&quot;ChartIntervalStartDate&quot;:null,&quot;ChartIntervalEndDate&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;ScheduleVersion&quot;:1,&quot;InsertedAt&quot;:&quot;2022-10-04T05:26:26.083Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;IsActive&quot;:true,&quot;BlobsFk&quot;:null,&quot;ScheduleEntities_PsdSchedulemasterFk&quot;:null,&quot;ScheduleEntity_PsdSchedulemasterFk&quot;:null},&quot;ParentActivityIdAsRead&quot;:null,&quot;Baseline&quot;:null,&quot;PackageId&quot;:null,&quot;PackageCode&quot;:null,&quot;PackageDesc&quot;:null,&quot;PeriodQuantityPerformance&quot;:null,&quot;DueDateQuantityPerformance&quot;:0,&quot;RemainingActivityWork&quot;:null,&quot;PeriodWorkPerformance&quot;:null,&quot;DueDateWorkPerformance&quot;:null,&quot;RemainingActivityQuantity&quot;:77,&quot;PercentageCompletion&quot;:0,&quot;PercentageRemaining&quot;:100,&quot;LastProgressDate&quot;:null,&quot;HasCalculatedStart&quot;:null,&quot;HasCalculatedEnd&quot;:null,&quot;HasReports&quot;:false,&quot;IsAssignedToEstimate&quot;:false,&quot;HasHammock&quot;:false,&quot;PlannedCalendarDays&quot;:1,&quot;ActualCalendarDays&quot;:null,&quot;CurrentCalendarDays&quot;:1,&quot;Predecessor&quot;:[],&quot;Successor&quot;:[],&quot;RubricCategoryFk&quot;:298,&quot;IsAssignedToHammock&quot;:false,&quot;ScheduleMasterFk&quot;:null,&quot;ActivityMasterFk&quot;:null,&quot;IsReadOnly&quot;:false,&quot;Id&quot;:${SchedulingId3},&quot;ProjectFk&quot;:${ProjectId1},&quot;ActivityTypeFk&quot;:1,&quot;BaselineFk&quot;:null,&quot;Code&quot;:&quot;30&quot;,&quot;Description&quot;:&quot;Dip1&quot;,&quot;ParentActivityFk&quot;:-1,&quot;ScheduleFk&quot;:${ParentId1},&quot;CompanyFk&quot;:1000005,&quot;BaseActivityFk&quot;:null,&quot;ActivityTemplateFk&quot;:null,&quot;ControllingUnitFk&quot;:null,&quot;CalendarFk&quot;:1,&quot;AllowModify&quot;:false,&quot;Specification&quot;:null,&quot;ActivityStateFk&quot;:1,&quot;SchedulingMethodFk&quot;:2,&quot;SubScheduleFk&quot;:null,&quot;ProjectReleaseFk&quot;:null,&quot;LocationFk&quot;:null,&quot;LocationSpecification&quot;:null,&quot;ActivityPresentationFk&quot;:1,&quot;ChartPresentationFk&quot;:null,&quot;PlannedStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;PlannedFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;ConstraintTypeFk&quot;:9,&quot;ConstraintDate&quot;:null,&quot;ActualStart&quot;:null,&quot;ActualFinish&quot;:null,&quot;ExecutionStarted&quot;:false,&quot;ActualDuration&quot;:null,&quot;CurrentStart&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;CurrentFinish&quot;:&quot;2022-10-04T23:59:59Z&quot;,&quot;CurrentDuration&quot;:1,&quot;ExecutionFinished&quot;:false,&quot;PlannedDuration&quot;:1,&quot;EarliestStart&quot;:null,&quot;LatestStart&quot;:null,&quot;EarliestFinish&quot;:null,&quot;LatestFinish&quot;:null,&quot;TotalFloatTime&quot;:null,&quot;FreeFloatTime&quot;:null,&quot;ResourceFactor&quot;:1,&quot;PerformanceFactor&quot;:1,&quot;PerformanceRuleFk&quot;:null,&quot;Perf1UoMFk&quot;:0,&quot;Perf2UoMFk&quot;:0,&quot;TaskTypeFk&quot;:1,&quot;Work&quot;:null,&quot;QuantityUoMFk&quot;:0,&quot;Quantity&quot;:77,&quot;ProgressReportMethodFk&quot;:2,&quot;Bas3dVisualizationTypeFk&quot;:1,&quot;LobLabelPlacementFk&quot;:null,&quot;SCurveFk&quot;:null,&quot;PrcStructureFk&quot;:null,&quot;EventTypeFk&quot;:null,&quot;IsCritical&quot;:false,&quot;IsLive&quot;:true,&quot;IsOnLongestPath&quot;:false,&quot;IsQuantityEvaluated&quot;:true,&quot;IsDirty&quot;:false,&quot;Note&quot;:null,&quot;UserDefinedText01&quot;:null,&quot;UserDefinedText02&quot;:null,&quot;UserDefinedText03&quot;:null,&quot;UserDefinedText04&quot;:null,&quot;UserDefinedText05&quot;:null,&quot;UserDefinedText06&quot;:null,&quot;UserDefinedText07&quot;:null,&quot;UserDefinedText08&quot;:null,&quot;UserDefinedText09&quot;:null,&quot;UserDefinedText10&quot;:null,&quot;UserDefinedNumber01&quot;:null,&quot;UserDefinedNumber02&quot;:null,&quot;UserDefinedNumber03&quot;:null,&quot;UserDefinedNumber04&quot;:null,&quot;UserDefinedNumber05&quot;:null,&quot;UserDefinedNumber06&quot;:null,&quot;UserDefinedNumber07&quot;:null,&quot;UserDefinedNumber08&quot;:null,&quot;UserDefinedNumber09&quot;:null,&quot;UserDefinedNumber10&quot;:null,&quot;UserDefinedDate01&quot;:null,&quot;UserDefinedDate02&quot;:null,&quot;UserDefinedDate03&quot;:null,&quot;UserDefinedDate04&quot;:null,&quot;UserDefinedDate05&quot;:null,&quot;UserDefinedDate06&quot;:null,&quot;UserDefinedDate07&quot;:null,&quot;UserDefinedDate08&quot;:null,&quot;UserDefinedDate09&quot;:null,&quot;UserDefinedDate10&quot;:null,&quot;SearchPattern&quot;:&quot;4636120Dip1Activity&quot;,&quot;CosMatchtext&quot;:null,&quot;InsertedAt&quot;:&quot;2022-10-04T00:00:00Z&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedAt&quot;:null,&quot;UpdatedBy&quot;:null,&quot;Version&quot;:1,&quot;ScheduleSubFk&quot;:null,&quot;ActivitySubFk&quot;:null,&quot;AddressFk&quot;:null,&quot;RemainingDuration&quot;:1,&quot;ObjectId&quot;:null,&quot;PsdBaselineEntity&quot;:null,&quot;PsdActivitytypeEntity&quot;:null,&quot;ActivityEntities_ParentActivityFk&quot;:null,&quot;ActivityEntity_ParentActivityFk&quot;:null,&quot;ActivityEntities_BaseActivityFk&quot;:null,&quot;ActivityEntity_BaseActivityFk&quot;:null,&quot;ActivityClerkEntities&quot;:null,&quot;ActivityProgressReportEntities&quot;:null,&quot;ActivityRelationshipEntities_ChildActivityFk&quot;:null,&quot;ActivityRelationshipEntities_ParentActivityFk&quot;:null,&quot;PsdCommentEntities&quot;:null,&quot;PsdHammockactivityEntities_PsdActivitymemberFk&quot;:null,&quot;PsdHammockactivityEntities_PsdActivityFk&quot;:null,&quot;ActivityEntities_ActivitySubFk&quot;:null,&quot;ActivityEntity_ActivitySubFk&quot;:null,&quot;__rt$data&quot;:{&quot;history&quot;:{&quot;insertedAt&quot;:&quot;04/10/2022 | 11:01:57&quot;,&quot;inserted&quot;:&quot;04/10/2022 | 11:01:57 (admin12)&quot;,&quot;insertedBy&quot;:&quot;admin12&quot;,&quot;updatedAt&quot;:&quot;&quot;,&quot;updated&quot;:&quot;&quot;,&quot;updatedBy&quot;:&quot;&quot;},&quot;readonly&quot;:[{&quot;field&quot;:&quot;ActivityStateFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ConstraintDate&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageCode&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PackageDesc&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ScheduleSubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivitySubFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;ActivityMasterFk&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;PeriodWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;DueDateWorkPerformance&quot;,&quot;readonly&quot;:true},{&quot;field&quot;:&quot;RemainingWorkQuantity&quot;,&quot;readonly&quot;:true}],&quot;colorInfo&quot;:{}},&quot;image&quot;:&quot;ico-task&quot;,&quot;nodeInfo&quot;:{&quot;level&quot;:1,&quot;collapsed&quot;:false,&quot;lastElement&quot;:false,&quot;children&quot;:false},&quot;schedulingType&quot;:&quot;Execution Schedule&quot;,&quot;schedulingCalendar&quot;:&quot;DE&quot;}],&quot;ActivityPlanningChange&quot;:{&quot;DueDate&quot;:&quot;2022-10-04T05:05:24.982Z&quot;},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/savelastObjects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ModuleName&quot;:&quot;scheduling.main&quot;,&quot;Lastchanged&quot;:&quot;2022-10-04T05:31:59.617Z&quot;,&quot;Summary&quot;:&quot;30,Dip1&quot;,&quot;ObjectId&quot;:${SchedulingId3}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/savelastObjects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickCriticalPathOptionInWizard" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;EntitiesCount&quot;:1,&quot;MainItemId&quot;:-1,&quot;ActivityPlanningChange&quot;:{&quot;DueDate&quot;:&quot;2022-10-12T07:55:56.262Z&quot;},&quot;PostProcess&quot;:{&quot;Action&quot;:7,&quot;EffectedItemId&quot;:${ParentId1}},&quot;saveCharacteristicsOngoing&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/tree" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cloud/common/savelastObjects" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ModuleName&quot;:&quot;scheduling.main&quot;,&quot;Lastchanged&quot;:&quot;2022-10-12T08:33:05.977Z&quot;,&quot;Summary&quot;:&quot;ROOT&quot;,&quot;ObjectId&quot;:-1}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/cloud/common/savelastObjects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/activity/filtered" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;,&quot;Pattern&quot;:&quot;ESCALATION1&quot;,&quot;PageSize&quot;:100,&quot;PageNumber&quot;:0,&quot;UseCurrentClient&quot;:null,&quot;IncludeNonActiveItems&quot;:false,&quot;ProjectContextId&quot;:${ProjectId1},&quot;PinningContext&quot;:[{&quot;token&quot;:&quot;scheduling.main&quot;,&quot;id&quot;:${ParentId1},&quot;info&quot;:&quot;123 - Dip12&quot;},{&quot;token&quot;:&quot;project.main&quot;,&quot;id&quot;:${ProjectId1},&quot;info&quot;:&quot;69325 - DipPackage1&quot;}],&quot;ExecutionHints&quot;:false,&quot;isReadingDueToRefresh&quot;:false,&quot;furtherFilters&quot;:[{&quot;Token&quot;:&quot;INCLUDE_DUEDATE&quot;,&quot;Value&quot;:&quot;2022-10-12T07:55:56.262Z&quot;},{&quot;Token&quot;:&quot;INCLUDE_TRANSIENTROOTENTITY&quot;,&quot;Value&quot;:&quot;True&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/filtered</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/event/listall" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:[-1]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/event/listall</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/relationship/listall" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:[-1]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/relationship/listall</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/relationship/listallbaseline" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:[-1]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/relationship/listallbaseline</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/hammock/listall" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:[-1]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/hammock/listall</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa6-live.mtwo.international/itwo40/services/basics/lookupdata/masternew/getlist?lookup=schedulingactivitytemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lookup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lookup</stringProp>
                  <stringProp name="Argument.value">schedulingactivitytemplate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/lookupdata/masternew/getlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/main/address/lookup" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;PKey1&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/address/lookup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/main/release/list?projectId=1003509" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/release/list</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scheduling/main/activity/tree" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/tree" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/location/tree?projectId=1003509" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/location/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickOkOnPopUpOfCalculateCriticalPath" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="runningworkflowaction/count" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/workflow/runningworkflowaction/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="errorDialog" elementType="Header">
                  <stringProp name="Header.name">errorDialog</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/message/readmessages" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;includeCertDetails&quot;:false,&quot;msgList&quot;:[&quot;System.Application.ShutDownMsg&quot;,&quot;System.Configuration.CertificateMsg&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/infrastructure/message/readmessages</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="errorDialog" elementType="Header">
                  <stringProp name="Header.name">errorDialog</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickOnGANTTContainer" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa6-live.mtwo.international/itwo40/services/basics/layout/saveview?asRole=false" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Id&quot;:1002340,&quot;BasModuletabFk&quot;:377,&quot;Description&quot;:null,&quot;DescriptionTr&quot;:null,&quot;Issystem&quot;:false,&quot;Isdefault&quot;:false,&quot;FrmUserFk&quot;:208,&quot;FrmAccessroleFk&quot;:null,&quot;IsPortal&quot;:false,&quot;Config&quot;:&quot;{\&quot;subviews\&quot;:\&quot;[{\\\&quot;content\\\&quot;:\\\&quot;11\\\&quot;,\\\&quot;pane\\\&quot;:\\\&quot;pane-0\\\&quot;}]\&quot;,\&quot;splitterDef\&quot;:\&quot;[]\&quot;,\&quot;baseLayoutId\&quot;:\&quot;layout0\&quot;,\&quot;template\&quot;:\&quot;app/components/layoutsystem/templates/layouts/layout0.html\&quot;}&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedBy&quot;:208,&quot;InsertedAt&quot;:&quot;2022-10-04T05:06:01.887&quot;,&quot;UpdatedAt&quot;:&quot;2022-10-12T07:57:27.7&quot;,&quot;Version&quot;:7,&quot;Isactivetab&quot;:false,&quot;ModuleTabViewOriginFk&quot;:815,&quot;Forceviewreset&quot;:null,&quot;ModuletabEntity&quot;:null,&quot;AsRole&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/saveview?asRole=false</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/settings/load?key=templates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">templates</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/settings/load</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/baseline/listbyschedule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Filter&quot;:[${ParentId1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/baseline/listbyschedule</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa6-live.mtwo.international/itwo40/services/basics/customize/EventType/list" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;filter&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/customize/EventType/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/calendar/utilities/calendarchartdata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Calendar&quot;:1,&quot;Project&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/calendar/utilities/calendarchartdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="masternew/getlist?lookup=schedulingactivitytemplate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lookup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lookup</stringProp>
                  <stringProp name="Argument.value">schedulingactivitytemplate</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/lookupdata/masternew/getlist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/main/address/lookup" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;PKey1&quot;:${ProjectId1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/address/lookup</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/main/release/list?projectId=1003509" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/main/release/list</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/tree" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/activity/tree" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/activity/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/project/location/tree?projectId=1003509" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="projectId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">projectId</stringProp>
                  <stringProp name="Argument.value">${ProjectId1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/project/location/tree</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/scheduling/main/splits/getsplitsbyactivity" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;activityids&quot;:[-1]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/scheduling/main/splits/getsplitsbyactivity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FromShowSettingCheckCriticalPathBox" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="runningworkflowaction/count" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/workflow/runningworkflowaction/count</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="errorDialog" elementType="Header">
                  <stringProp name="Header.name">errorDialog</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="basics/layout/saveconfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;BasModuletabviewFk&quot;:1002340,&quot;Guid&quot;:&quot;3a1a26c46b9e4e35af5ad60fd2f49679&quot;,&quot;Propertyconfig&quot;:&quot;[{\&quot;id\&quot;:\&quot;code\&quot;,\&quot;name\&quot;:\&quot;Code\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCode\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:48,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;description\&quot;,\&quot;name\&quot;:\&quot;Description\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDescription\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:105,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;plannedduration\&quot;,\&quot;name\&quot;:\&quot;Planned Duration\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.plannedDuration\&quot;,\&quot;userLabelName\&quot;:\&quot;P.Duration\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;plannedstart\&quot;,\&quot;name\&quot;:\&quot;Planned Start\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.plannedStart\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:78,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;plannedfinish\&quot;,\&quot;name\&quot;:\&quot;Planned Finish\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.plannedFinish\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:78,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;actualduration\&quot;,\&quot;name\&quot;:\&quot;Actual Duration\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.actualDuration\&quot;,\&quot;userLabelName\&quot;:\&quot;A.Duration\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;actualstart\&quot;,\&quot;name\&quot;:\&quot;Actual Start\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.actualStart\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:63,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;actualfinish\&quot;,\&quot;name\&quot;:\&quot;Actual Finish\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.actualFinish\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:69,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;executionfinished\&quot;,\&quot;name\&quot;:\&quot;Finished\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.executionFinished\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:30,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;currentduration\&quot;,\&quot;name\&quot;:\&quot;Current Duration\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.currentDuration\&quot;,\&quot;userLabelName\&quot;:\&quot;C.Duration\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:58,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;currentstart\&quot;,\&quot;name\&quot;:\&quot;Current Start\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.currentStart\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:72,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;currentfinish\&quot;,\&quot;name\&quot;:\&quot;Current Finish\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.currentFinish\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:78,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;quantity\&quot;,\&quot;name\&quot;:\&quot;Quantity\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityQuantity\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:55,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;quantityuomfk\&quot;,\&quot;name\&quot;:\&quot;UoM\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUoM\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:46,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;activitytemplatefk\&quot;,\&quot;name\&quot;:\&quot;Template\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityTemplate\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:75,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;controllingunitfk\&quot;,\&quot;name\&quot;:\&quot;Controlling Unit\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.controllingunit\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;controllingunitfkdescription\&quot;,\&quot;name\&quot;:\&quot;Controlling Unit-Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;parentactivityfk\&quot;,\&quot;name\&quot;:\&quot;Parent\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityParent\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;activitystatefk\&quot;,\&quot;name\&quot;:\&quot;Status\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityState\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;projectfk\&quot;,\&quot;name\&quot;:\&quot;Project\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityProject\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;projectfkprojectname\&quot;,\&quot;name\&quot;:\&quot;Project-Name\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;schedulefk\&quot;,\&quot;name\&quot;:\&quot;Schedule\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.schedule\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;schedulefkdescription\&quot;,\&quot;name\&quot;:\&quot;Schedule-Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;schedulingmethodfk\&quot;,\&quot;name\&quot;:\&quot;Scheduling Method\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.schedulingMethod\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;tasktypefk\&quot;,\&quot;name\&quot;:\&quot;Type\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityType\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;quantityuomfkdescription\&quot;,\&quot;name\&quot;:\&quot;UoM-Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;specification\&quot;,\&quot;name\&quot;:\&quot;Specification\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entitySpecification\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;note\&quot;,\&quot;name\&quot;:\&quot;Note\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.note\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;baselinefk\&quot;,\&quot;name\&quot;:\&quot;Baseline\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.baseline\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;locationfk\&quot;,\&quot;name\&quot;:\&quot;Location\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.location\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;locationfkdescription\&quot;,\&quot;name\&quot;:\&quot;Location-Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;activitypresentationfk\&quot;,\&quot;name\&quot;:\&quot;Activity Presented\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.activityPresented\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;locationspecification\&quot;,\&quot;name\&quot;:\&quot;Specification\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entitySpecification\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;chartpresentationfk\&quot;,\&quot;name\&quot;:\&quot;Chart Presented\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.activityChartPresented\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;constrainttypefk\&quot;,\&quot;name\&quot;:\&quot;Constraint\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.constraint\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;constraintdate\&quot;,\&quot;name\&quot;:\&quot;Date\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityDate\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;executionstarted\&quot;,\&quot;name\&quot;:\&quot;Started\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.executionStarted\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:20,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;performancefactor\&quot;,\&quot;name\&quot;:\&quot;Productivity\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.performanceFactor\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;perf1uomfk\&quot;,\&quot;name\&quot;:\&quot;UoM 1\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.perfUoM\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;number\&quot;:\&quot;1\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;perf1uomfkdescription\&quot;,\&quot;name\&quot;:\&quot;UoM -Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;perf2uomfk\&quot;,\&quot;name\&quot;:\&quot;UoM 2\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.perfUoM\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;number\&quot;:\&quot;2\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;perf2uomfkdescription\&quot;,\&quot;name\&quot;:\&quot;UoM -Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;percentagecompletion\&quot;,\&quot;name\&quot;:\&quot;Measured Performance %\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityMeasuredPerformance\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;periodquantityperformance\&quot;,\&quot;name\&quot;:\&quot;Performance in Period Quantity\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityPeriodQuantityPerformance\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;duedatequantityperformance\&quot;,\&quot;name\&quot;:\&quot;Performance per Due Date Quantity\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityDueDateQuantityPerformance\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;remainingactivityquantity\&quot;,\&quot;name\&quot;:\&quot;Remaining Quantity\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityRemainingActivityQuantity\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;periodworkperformance\&quot;,\&quot;name\&quot;:\&quot;Performance in Period Work\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityPeriodWorkPerformance\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;duedateworkperformance\&quot;,\&quot;name\&quot;:\&quot;Performance per Due Date Work\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityDueDateWorkPerformance\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;remainingactivitywork\&quot;,\&quot;name\&quot;:\&quot;Remaining Work\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.entityRemainingActivityWork\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;progressreportmethodfk\&quot;,\&quot;name\&quot;:\&quot;Report Method\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.progressReportMethod\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;work\&quot;,\&quot;name\&quot;:\&quot;Work\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.work\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext01\&quot;,\&quot;name\&quot;:\&quot;Text 1\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext02\&quot;,\&quot;name\&quot;:\&quot;Text 2\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext03\&quot;,\&quot;name\&quot;:\&quot;Text 3\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext04\&quot;,\&quot;name\&quot;:\&quot;Text 4\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext05\&quot;,\&quot;name\&quot;:\&quot;Text 5\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext06\&quot;,\&quot;name\&quot;:\&quot;Text 6\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext07\&quot;,\&quot;name\&quot;:\&quot;Text 7\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext08\&quot;,\&quot;name\&quot;:\&quot;Text 8\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext09\&quot;,\&quot;name\&quot;:\&quot;Text 9\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinedtext10\&quot;,\&quot;name\&quot;:\&quot;Text 10\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefText\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:200,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber01\&quot;,\&quot;name\&quot;:\&quot;Number 1\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber02\&quot;,\&quot;name\&quot;:\&quot;Number 2\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber03\&quot;,\&quot;name\&quot;:\&quot;Number 3\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber04\&quot;,\&quot;name\&quot;:\&quot;Number 4\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber05\&quot;,\&quot;name\&quot;:\&quot;Number 5\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber06\&quot;,\&quot;name\&quot;:\&quot;Number 6\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber07\&quot;,\&quot;name\&quot;:\&quot;Number 7\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber08\&quot;,\&quot;name\&quot;:\&quot;Number 8\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber09\&quot;,\&quot;name\&quot;:\&quot;Number 9\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefinednumber10\&quot;,\&quot;name\&quot;:\&quot;Number 10\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefNumber\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate01\&quot;,\&quot;name\&quot;:\&quot;Date 1\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;1\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate02\&quot;,\&quot;name\&quot;:\&quot;Date 2\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;2\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate03\&quot;,\&quot;name\&quot;:\&quot;Date 3\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;3\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate04\&quot;,\&quot;name\&quot;:\&quot;Date 4\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;4\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate05\&quot;,\&quot;name\&quot;:\&quot;Date 5\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;5\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate06\&quot;,\&quot;name\&quot;:\&quot;Date 6\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;6\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate07\&quot;,\&quot;name\&quot;:\&quot;Date 7\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;7\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate08\&quot;,\&quot;name\&quot;:\&quot;Date 8\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;8\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate09\&quot;,\&quot;name\&quot;:\&quot;Date 9\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;9\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;userdefineddate10\&quot;,\&quot;name\&quot;:\&quot;Date 10\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUserDefDate\&quot;,\&quot;name$tr$param$\&quot;:{\&quot;p_0\&quot;:\&quot;10\&quot;},\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;insertedat\&quot;,\&quot;name\&quot;:\&quot;Inserted At\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityInsertedAt\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;insertedby\&quot;,\&quot;name\&quot;:\&quot;Inserted By\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityInsertedBy\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;projectfkprojectname2\&quot;,\&quot;name\&quot;:\&quot;Project-Name 2\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;updatedat\&quot;,\&quot;name\&quot;:\&quot;Updated At\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUpdatedAt\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;schedulefktargetstart\&quot;,\&quot;name\&quot;:\&quot;Schedule-Target Start\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;updatedby\&quot;,\&quot;name\&quot;:\&quot;Updated By\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityUpdatedBy\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:false,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:false,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;schedulefktargetend\&quot;,\&quot;name\&quot;:\&quot;Schedule-Target End\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;calendarfk\&quot;,\&quot;name\&quot;:\&quot;Calendar\&quot;,\&quot;name$tr$\&quot;:\&quot;cloud.common.entityCalCalendarFk\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;calendarfkdescription\&quot;,\&quot;name\&quot;:\&quot;Calendar-Description\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:60,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;scurvefk\&quot;,\&quot;name\&quot;:\&quot;S Curve\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.activitySCurve\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;bas3dvisualizationtypefk\&quot;,\&quot;name\&quot;:\&quot;3D Visualization Type\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.3dVisualizationType\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:150,\&quot;pinned\&quot;:false},{\&quot;id\&quot;:\&quot;resourcefactor\&quot;,\&quot;name\&quot;:\&quot;Resource/Crew\&quot;,\&quot;name$tr$\&quot;:\&quot;scheduling.main.resourceFactor\&quot;,\&quot;keyboard\&quot;:{\&quot;enter\&quot;:true,\&quot;tab\&quot;:true},\&quot;hidden\&quot;:true,\&quot;width\&quot;:100,\&quot;pinned\&quot;:false}]&quot;,&quot;Gridconfig&quot;:&quot;{\&quot;groups\&quot;:[],\&quot;sortColumn\&quot;:\&quot;null\&quot;}&quot;,&quot;Viewdata&quot;:&quot;{\&quot;chartsettings\&quot;:{\&quot;version\&quot;:0.8,\&quot;lob\&quot;:{\&quot;sortOrder\&quot;:[true,true,true,true],\&quot;flipAxis\&quot;:false,\&quot;showCritical\&quot;:false,\&quot;showProgress\&quot;:false,\&quot;criticalColor\&quot;:\&quot;#FF0000\&quot;,\&quot;showWeekends\&quot;:true,\&quot;showHolidays\&quot;:true,\&quot;showTimelines\&quot;:true,\&quot;verticalLines\&quot;:[true,true,true],\&quot;timescalePosition\&quot;:\&quot;bottom\&quot;,\&quot;locationbarwidth\&quot;:176,\&quot;showVerticalLines\&quot;:false,\&quot;showLocationConnections\&quot;:false,\&quot;hiddenLocations\&quot;:[],\&quot;printing\&quot;:{\&quot;papersize\&quot;:\&quot;A3\&quot;,\&quot;orientation\&quot;:\&quot;landscape\&quot;,\&quot;timescalePosition\&quot;:\&quot;bottom\&quot;,\&quot;margin\&quot;:[0,2,6,1],\&quot;spanX\&quot;:1,\&quot;spanY\&quot;:1,\&quot;minimum\&quot;:\&quot;2022-10-04T05:06:02.284Z\&quot;,\&quot;maximum\&quot;:\&quot;2023-04-04T05:06:02.284Z\&quot;,\&quot;reportRangeStart\&quot;:null,\&quot;reportRangeEnd\&quot;:null,\&quot;useReportRange\&quot;:false,\&quot;reportHeader\&quot;:\&quot;\&quot;,\&quot;reportHeaderPath\&quot;:\&quot;\&quot;,\&quot;reportHeaderHeight\&quot;:0,\&quot;reportHeaderOnlyFirst\&quot;:false,\&quot;reportFooter\&quot;:\&quot;\&quot;,\&quot;reportFooterPath\&quot;:\&quot;\&quot;,\&quot;headerId\&quot;:-1,\&quot;footerId\&quot;:-1,\&quot;reportFooterHeight\&quot;:0,\&quot;reportFooterOnlyLast\&quot;:false,\&quot;showLegend\&quot;:false},\&quot;barinformation\&quot;:[{\&quot;type\&quot;:1,\&quot;middle\&quot;:\&quot;description\&quot;},{\&quot;type\&quot;:2},{\&quot;type\&quot;:3}],\&quot;showBarInformation\&quot;:\&quot;summary\&quot;,\&quot;shouldHideWeekends\&quot;:false},\&quot;gantt\&quot;:{\&quot;showRelationships\&quot;:true,\&quot;showSeparatedRelationships\&quot;:true,\&quot;showEvents\&quot;:true,\&quot;showProgresslines\&quot;:false,\&quot;showCurrentBaseline\&quot;:true,\&quot;showPlannedBaseline\&quot;:true,\&quot;progresslinecolors\&quot;:[\&quot;#7986CB\&quot;,\&quot;#81c784\&quot;,\&quot;#ba68c8\&quot;,\&quot;#ffe0b2\&quot;,\&quot;#ffb74d\&quot;],\&quot;showCritical\&quot;:true,\&quot;showWeekends\&quot;:true,\&quot;showHolidays\&quot;:true,\&quot;criticalColor\&quot;:\&quot;#FF0000\&quot;,\&quot;criticalBorderWidth\&quot;:\&quot;1px\&quot;,\&quot;showTimelines\&quot;:true,\&quot;showNoteIcon\&quot;:true,\&quot;verticalLines\&quot;:[true,true,true],\&quot;timescalePosition\&quot;:\&quot;top\&quot;,\&quot;showHammock\&quot;:true,\&quot;showVerticalLines\&quot;:false,\&quot;printing\&quot;:{\&quot;papersize\&quot;:\&quot;A3\&quot;,\&quot;orientation\&quot;:\&quot;landscape\&quot;,\&quot;timescalePosition\&quot;:\&quot;top\&quot;,\&quot;margin\&quot;:[0,2,7,1],\&quot;spanX\&quot;:1,\&quot;spanY\&quot;:1,\&quot;showTable\&quot;:true,\&quot;columns\&quot;:[\&quot;code\&quot;,\&quot;description\&quot;,\&quot;quantity\&quot;,\&quot;plannedstart\&quot;,\&quot;plannedfinish\&quot;,\&quot;plannedduration\&quot;],\&quot;headers\&quot;:[null,null,null,null,null,\&quot;Duration\&quot;],\&quot;columnwidths\&quot;:[100,100,100,100,100,100],\&quot;minimum\&quot;:\&quot;2022-10-04T05:06:02.284Z\&quot;,\&quot;maximum\&quot;:\&quot;2023-04-04T05:06:02.284Z\&quot;,\&quot;reportRangeStart\&quot;:null,\&quot;reportRangeEnd\&quot;:null,\&quot;useReportRange\&quot;:false,\&quot;reportHeader\&quot;:\&quot;\&quot;,\&quot;reportHeaderPath\&quot;:\&quot;\&quot;,\&quot;reportHeaderHeight\&quot;:0,\&quot;reportHeaderOnlyFirst\&quot;:false,\&quot;reportFooter\&quot;:\&quot;\&quot;,\&quot;reportFooterPath\&quot;:\&quot;\&quot;,\&quot;headerId\&quot;:-1,\&quot;footerId\&quot;:-1,\&quot;reportFooterHeight\&quot;:0,\&quot;reportFooterOnlyLast\&quot;:false,\&quot;showLegend\&quot;:true},\&quot;barinformation\&quot;:[{\&quot;type\&quot;:1,\&quot;middle\&quot;:\&quot;description\&quot;},{\&quot;type\&quot;:2},{\&quot;type\&quot;:3},{\&quot;type\&quot;:5}],\&quot;showBarInformation\&quot;:false,\&quot;shouldHideWeekends\&quot;:false},\&quot;templatemap\&quot;:[{\&quot;Id\&quot;:2,\&quot;layer\&quot;:11,\&quot;visible\&quot;:true,\&quot;type\&quot;:\&quot;planned\&quot;,\&quot;versionname\&quot;:\&quot;Planned version\&quot;,\&quot;templatekey\&quot;:1,\&quot;__rt$data\&quot;:{\&quot;readonly\&quot;:[]}},{\&quot;Id\&quot;:3,\&quot;layer\&quot;:12,\&quot;visible\&quot;:false,\&quot;type\&quot;:\&quot;actual\&quot;,\&quot;versionname\&quot;:\&quot;Actual\&quot;,\&quot;templatekey\&quot;:2,\&quot;__rt$data\&quot;:{\&quot;readonly\&quot;:[]}},{\&quot;Id\&quot;:1,\&quot;layer\&quot;:13,\&quot;visible\&quot;:false,\&quot;type\&quot;:\&quot;current\&quot;,\&quot;versionname\&quot;:\&quot;Current version\&quot;,\&quot;templatekey\&quot;:1,\&quot;__rt$data\&quot;:{\&quot;readonly\&quot;:[]}},{\&quot;Id\&quot;:4,\&quot;layer\&quot;:20,\&quot;visible\&quot;:false,\&quot;type\&quot;:\&quot;progress\&quot;,\&quot;versionname\&quot;:\&quot;Total progress\&quot;,\&quot;templatekey\&quot;:2,\&quot;category\&quot;:\&quot;Progress\&quot;,\&quot;__rt$data\&quot;:{\&quot;readonly\&quot;:[]}}]},\&quot;splitterstate\&quot;:{\&quot;left\&quot;:32,\&quot;right\&quot;:68,\&quot;leftcollapsed\&quot;:false,\&quot;rightcollapsed\&quot;:false}}&quot;,&quot;InsertedBy&quot;:208,&quot;UpdatedBy&quot;:208,&quot;InsertedAt&quot;:&quot;2022-10-04T05:07:24.757&quot;,&quot;UpdatedAt&quot;:&quot;2022-10-12T07:56:47.197&quot;,&quot;Version&quot;:3,&quot;ModuletabviewEntity&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">itwo40/services/basics/layout/saveconfig</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="filename">C:/Jmeter/apache-jmeter-5.4.3/apache-jmeter-5.4.3/bin/iTWO4.0CsvFile.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">username,password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
